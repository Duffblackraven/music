"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("_app-pages-browser_src_components_ContentPlaylist_ContentPlaylist_tsx",{

/***/ "(app-pages-browser)/./src/components/ContentPlaylist/ContentPlaylist.tsx":
/*!************************************************************!*\
  !*** ./src/components/ContentPlaylist/ContentPlaylist.tsx ***!
  \************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var _ContentPlaylist_module_css__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./ContentPlaylist.module.css */ \"(app-pages-browser)/./src/components/ContentPlaylist/ContentPlaylist.module.css\");\n/* harmony import */ var _ContentPlaylist_module_css__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_ContentPlaylist_module_css__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! classnames */ \"(app-pages-browser)/./node_modules/classnames/index.js\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _store_features_tracksSlice__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/store/features/tracksSlice */ \"(app-pages-browser)/./src/store/features/tracksSlice.ts\");\n/* harmony import */ var _components_PlayListItem__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @components/PlayListItem */ \"(app-pages-browser)/./src/components/PlayListItem/index.tsx\");\n/* harmony import */ var _lib_sortTracksByReleaseDate__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/lib/sortTracksByReleaseDate */ \"(app-pages-browser)/./src/lib/sortTracksByReleaseDate.ts\");\n/* harmony import */ var _store_features_authSlice__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/store/features/authSlice */ \"(app-pages-browser)/./src/store/features/authSlice.ts\");\n/* harmony import */ var _types_hooks__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @/types/hooks */ \"(app-pages-browser)/./src/types/hooks.ts\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\n\nconst ContentPlaylist = ()=>{\n    _s();\n    const dispatcher = (0,_types_hooks__WEBPACK_IMPORTED_MODULE_7__.useAppDispatch)();\n    const playList = useAppSelector((state)=>state.tracks.playList);\n    const searchPlayList = useAppSelector((state)=>state.tracks.searchPlaylist);\n    const { track } = useAppSelector((state)=>state.tracks);\n    const userToken = localStorage.getItem(\"userToken\");\n    const isSearch = useAppSelector((state)=>state.tracks.isSearch);\n    const activeFilters = useAppSelector((state)=>state.tracks.activeFilters);\n    // get a new access token using the refresh token\n    const [tokenRefreshInterval, setTokenRefreshInterval] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n    const handleRefreshToken = async ()=>{\n        try {\n            const token = localStorage.getItem(\"refreshToken\");\n            if (!token) return;\n            const refreshedToken = await refreshToken(token);\n            dispatcher((0,_store_features_authSlice__WEBPACK_IMPORTED_MODULE_6__.setAuthUserToken)(refreshedToken.access));\n        } catch (error) {\n            console.error(\"Error refreshing token:\", error);\n        }\n    };\n    // timer to refresh the token every 180 seconds\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        const interval = setInterval(()=>{\n            handleRefreshToken();\n        }, 180000);\n        setTokenRefreshInterval(interval);\n        return ()=>{\n            if (tokenRefreshInterval) clearInterval(tokenRefreshInterval);\n        };\n    }, []);\n    // check playlist number 1/2/3\n    const playlistID = useAppSelector((state)=>state.tracks.playlistNumber);\n    // get the tracklist from API\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        if (userToken !== null) {\n            if (String(playlistID) === \"liked\") {\n                getLikedTracks(userToken).then((data)=>{\n                    dispatcher((0,_store_features_tracksSlice__WEBPACK_IMPORTED_MODULE_3__.setPlayList)(data));\n                });\n            } else {\n                getTracks(playlistID).then((data)=>{\n                    // check if the data is wrapped\n                    data.items ? dispatcher((0,_store_features_tracksSlice__WEBPACK_IMPORTED_MODULE_3__.setPlayList)(data.items)) : dispatcher((0,_store_features_tracksSlice__WEBPACK_IMPORTED_MODULE_3__.setPlayList)(data));\n                });\n            }\n        }\n    }, [\n        dispatcher,\n        playlistID\n    ]);\n    // Redux tools: set the track playing\n    const handleTrack = (trackR)=>{\n        dispatcher((0,_store_features_tracksSlice__WEBPACK_IMPORTED_MODULE_3__.setCurrentTrack)(trackR));\n    };\n    // add a duration from audio props to each track\n    const [trackDurations, setTrackDurations] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)({});\n    const audioRefs = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)({});\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        const durations = {};\n        playList === null || playList === void 0 ? void 0 : playList.forEach((track)=>{\n            const audio = new Audio(track.track_file);\n            audio.addEventListener(\"loadedmetadata\", ()=>{\n                durations[track.id] = audio.duration;\n                setTrackDurations({\n                    ...durations\n                });\n            });\n            audioRefs.current[track.id] = audio;\n        });\n        return ()=>{\n            Object.values(audioRefs.current).forEach((audio)=>{\n                audio.pause();\n                audio.removeAttribute(\"src\");\n                audio.load();\n            });\n        };\n    }, [\n        playList\n    ]);\n    // HOW IT WORKS\n    // First, check if the searchbar contains any value. If true, apply other filters to the search result.\n    // Second, check what artists and genres filters are applied.\n    // Third, memorize the result of applied search and filters. Here is the third check of sortTracksByReleaseDate.\n    // If true, apply sortTracksByReleaseDate to filteredTracks object. If false, simply return filteredTracks.\n    // determine which tracklist to render, default or search\n    const tracksToRender = isSearch ? searchPlayList : playList;\n    // filter tracks by artists and genres\n    const filterTracks = (tracks)=>{\n        return tracks.filter((track)=>{\n            const isAuthorsMatch = activeFilters.authors.length === 0 || activeFilters.authors.includes(track.author);\n            const isGenresMatch = activeFilters.genres.length === 0 || activeFilters.genres.includes(track.genre);\n            return isAuthorsMatch && isGenresMatch;\n        });\n    };\n    // useMemo to save the result of applied filters\n    const filteredAndSortedPlaylist = (0,react__WEBPACK_IMPORTED_MODULE_2__.useMemo)(()=>{\n        const filteredTracks = filterTracks(tracksToRender);\n        if (activeFilters.release_dates) {\n            return (0,_lib_sortTracksByReleaseDate__WEBPACK_IMPORTED_MODULE_5__.sortTracksByReleaseDate)(filteredTracks, activeFilters.release_dates);\n        } else {\n            return filteredTracks;\n        }\n    }, [\n        tracksToRender,\n        activeFilters\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: classnames__WEBPACK_IMPORTED_MODULE_1___default()((_ContentPlaylist_module_css__WEBPACK_IMPORTED_MODULE_8___default().contentPlaylist), (_ContentPlaylist_module_css__WEBPACK_IMPORTED_MODULE_8___default().playlist)),\n        children: isSearch && tracksToRender.length === 0 ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n            className: (_ContentPlaylist_module_css__WEBPACK_IMPORTED_MODULE_8___default().playlistTitleCol),\n            children: \"No tracks found\"\n        }, void 0, false, {\n            fileName: \"C:\\\\Users\\\\duffb\\\\OneDrive\\\\Рабочий стол\\\\new_music\\\\music\\\\src\\\\components\\\\ContentPlaylist\\\\ContentPlaylist.tsx\",\n            lineNumber: 121,\n            columnNumber: 9\n        }, undefined) : filteredAndSortedPlaylist.map((trackR)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_PlayListItem__WEBPACK_IMPORTED_MODULE_4__.PlayListItem, {\n                id: trackR.id,\n                name: trackR.name,\n                author: trackR.author,\n                album: trackR.album,\n                duration: trackDurations[trackR.id],\n                setTrack: ()=>handleTrack(trackR),\n                isSetTrack: trackR.id === (track === null || track === void 0 ? void 0 : track.id),\n                stared_user: trackR.stared_user,\n                // @ts-ignore\n                playlistID: playlistID\n            }, trackR.id, false, {\n                fileName: \"C:\\\\Users\\\\duffb\\\\OneDrive\\\\Рабочий стол\\\\new_music\\\\music\\\\src\\\\components\\\\ContentPlaylist\\\\ContentPlaylist.tsx\",\n                lineNumber: 124,\n                columnNumber: 11\n            }, undefined))\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\duffb\\\\OneDrive\\\\Рабочий стол\\\\new_music\\\\music\\\\src\\\\components\\\\ContentPlaylist\\\\ContentPlaylist.tsx\",\n        lineNumber: 119,\n        columnNumber: 5\n    }, undefined);\n};\n_s(ContentPlaylist, \"fe7HF2i0C4pWsrnuDQdIhTWhSpg=\", true, function() {\n    return [\n        _types_hooks__WEBPACK_IMPORTED_MODULE_7__.useAppDispatch\n    ];\n});\n_c = ContentPlaylist;\n/* harmony default export */ __webpack_exports__[\"default\"] = (ContentPlaylist); // \"use client\"\n // import styles from \"./ContentPlaylist.module.css\";\n // import classNames from \"classnames\";\n // import React, { useEffect, useMemo, useRef, useState } from 'react';\n // import { trackType } from '@/types/types';\n // import { setCurrentTrack, setPlayList } from '@/store/features/tracksSlice';\n // import { PlayListItem } from '@components/PlayListItem';\n // import { useAppDispatch, useAppSelector } from \"@/types/hooks\";\n // import { getTracks } from \"@/api/api\";\n // import { sortTracksByReleaseDate } from \"@/lib/sortTracksByReleaseDate\";\n // const ContentPlaylist = () => {\n //   const dispatcher = useAppDispatch();\n //   const playList = useAppSelector((state) => state.tracks.playList);\n //   const searchPlayList = useAppSelector((state) => state.tracks.searchPlaylist);\n //   const { track } = useAppSelector((state) => state.tracks);\n //   const isSearch = useAppSelector((state) => state.tracks.isSearch);\n //   const activeFilters = useAppSelector((state) => state.tracks.activeFilters);\n //   const playlistNumber = useAppSelector((state) => state.tracks.playlistNumber);\n //   useEffect(() => {\n //     getTracks(playlistNumber).then((data) => {\n //       data.items ? dispatcher(setPlayList(data.items)) : dispatcher(setPlayList(data));\n //     });\n //   }, [dispatcher, playlistNumber]);\n //   const handleTrack = (trackR: trackType) => {\n //     dispatcher(setCurrentTrack(trackR));\n //   };\n //   const [trackDurations, setTrackDurations] = useState<{ [key: string]: number }>({});\n //   const audioRefs = useRef<{ [key: string]: HTMLAudioElement }>({});\n //   useEffect(() => {\n //     const durations: { [key: string]: number } = {};\n //     playList?.forEach((track: trackType) => {\n //       const audio = new Audio(track.track_file);\n //       audio.addEventListener('loadedmetadata', () => {\n //         durations[track.id] = audio.duration;\n //         setTrackDurations({ ...durations });\n //       });\n //       audioRefs.current[track.id] = audio;\n //     });\n //     return () => {\n //       Object.values(audioRefs.current).forEach((audio) => {\n //         audio.pause();\n //         audio.removeAttribute('src');\n //         audio.load();\n //       });\n //     };\n //   }, [playList]);\n //   const tracksToRender = isSearch ? searchPlayList : playList;\n //   const filterTracks = (tracks: trackType[]) => {\n //     return tracks.filter((track) => {\n //       const isAuthorsMatch = activeFilters.authors.length === 0 || activeFilters.authors.includes(track.author);\n //       const isGenresMatch = activeFilters.genres.length === 0 || activeFilters.genres.includes(track.genre);\n //       return isAuthorsMatch && isGenresMatch;\n //     });\n //   };\n //   const filteredAndSortedPlaylist = useMemo(() => {\n //     const filteredTracks = filterTracks(tracksToRender);\n //     if (activeFilters.release_dates) {\n //       return sortTracksByReleaseDate(filteredTracks, activeFilters.release_dates);\n //     } else {\n //       return filteredTracks;\n //     }\n //   }, [tracksToRender, activeFilters]);\n //   return (\n //     <div className={classNames(styles.contentPlaylist, styles.playlist)}>\n //       {isSearch && tracksToRender.length === 0 ? (\n //         <p className={styles.playlistTitleCol}>No tracks found</p>\n //       ) : (\n //         filteredAndSortedPlaylist.map((trackR: trackType) => (\n //           <PlayListItem\n //             key={trackR.id}\n //             name={trackR.name}\n //             author={trackR.author}\n //             album={trackR.album}\n //             duration={trackDurations[trackR.id]}\n //             setTrack={() => handleTrack(trackR)}\n //             isSetTrack={trackR.id === track?.id}\n //           />\n //         ))\n //       )}\n //     </div>\n //   );\n // };\n // export default ContentPlaylist;\nvar _c;\n$RefreshReg$(_c, \"ContentPlaylist\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/ContentPlaylist/ContentPlaylist.tsx\n"));

/***/ })

});