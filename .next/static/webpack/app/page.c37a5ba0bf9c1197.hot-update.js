/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/components/BarVolume/BarVolume.tsx":
/*!************************************************!*\
  !*** ./src/components/BarVolume/BarVolume.tsx ***!
  \************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("// import styles from \"./BarVolume.module.css\";\n// import classNames from \"classnames\";\n// import { useState } from \"react\";\n// type BarVolumeProps = {\n//   handleVolume: any;\n// };\n// export default function BarVolume({ handleVolume }: BarVolumeProps) {\n//   const [volume, setVolume] = useState(\"\");\n//   const onChange = (e: any) => {\n//     let newVolume = e.target.value;\n//     setVolume(newVolume);\n//     handleVolume(+newVolume)\n//   };\n//   return (\n//     <div className={classNames(styles.barVolume, styles.volume)}>\n//       <div className={styles.volumeContent}>\n//         <div className={styles.volumeImage}>\n//           <svg className={styles.volumeSvg}>\n//             <use href=\"/img/icon/sprite.svg#icon-volume\"></use>\n//           </svg>\n//         </div>\n//         <div className={styles.volumeProgress}>\n//           <input\n//             className={classNames(styles.volumeProgressLine, styles.sliderProgress)}\n//             type=\"range\"\n//             name=\"range\"\n//             min={0}\n//             value={volume}\n//             max={100}\n//             onChange={onChange}\n//             step={1}\n//           />\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb21wb25lbnRzL0JhclZvbHVtZS9CYXJWb2x1bWUudHN4IiwibWFwcGluZ3MiOiJBQUVBLCtDQUErQztBQUMvQyx1Q0FBdUM7QUFDdkMsb0NBQW9DO0FBRXBDLDBCQUEwQjtBQUMxQix1QkFBdUI7QUFDdkIsS0FBSztBQUVMLHdFQUF3RTtBQUV4RSw4Q0FBOEM7QUFDOUMsbUNBQW1DO0FBQ25DLHNDQUFzQztBQUN0Qyw0QkFBNEI7QUFDNUIsK0JBQStCO0FBQy9CLE9BQU87QUFFUCxhQUFhO0FBQ2Isb0VBQW9FO0FBQ3BFLCtDQUErQztBQUMvQywrQ0FBK0M7QUFDL0MsK0NBQStDO0FBQy9DLGtFQUFrRTtBQUNsRSxtQkFBbUI7QUFDbkIsaUJBQWlCO0FBQ2pCLGtEQUFrRDtBQUNsRCxtQkFBbUI7QUFDbkIsdUZBQXVGO0FBQ3ZGLDJCQUEyQjtBQUMzQiwyQkFBMkI7QUFDM0Isc0JBQXNCO0FBQ3RCLDZCQUE2QjtBQUM3Qix3QkFBd0I7QUFDeEIsa0NBQWtDO0FBQ2xDLHVCQUF1QjtBQUN2QixlQUFlO0FBQ2YsaUJBQWlCO0FBQ2pCLGVBQWU7QUFDZixhQUFhO0FBQ2IsT0FBTztBQUNQLElBQUkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2NvbXBvbmVudHMvQmFyVm9sdW1lL0JhclZvbHVtZS50c3g/NWQ4MyJdLCJzb3VyY2VzQ29udGVudCI6WyJcclxuXHJcbi8vIGltcG9ydCBzdHlsZXMgZnJvbSBcIi4vQmFyVm9sdW1lLm1vZHVsZS5jc3NcIjtcclxuLy8gaW1wb3J0IGNsYXNzTmFtZXMgZnJvbSBcImNsYXNzbmFtZXNcIjtcclxuLy8gaW1wb3J0IHsgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcclxuXHJcbi8vIHR5cGUgQmFyVm9sdW1lUHJvcHMgPSB7XHJcbi8vICAgaGFuZGxlVm9sdW1lOiBhbnk7XHJcbi8vIH07XHJcblxyXG4vLyBleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBCYXJWb2x1bWUoeyBoYW5kbGVWb2x1bWUgfTogQmFyVm9sdW1lUHJvcHMpIHtcclxuXHJcbi8vICAgY29uc3QgW3ZvbHVtZSwgc2V0Vm9sdW1lXSA9IHVzZVN0YXRlKFwiXCIpO1xyXG4vLyAgIGNvbnN0IG9uQ2hhbmdlID0gKGU6IGFueSkgPT4ge1xyXG4vLyAgICAgbGV0IG5ld1ZvbHVtZSA9IGUudGFyZ2V0LnZhbHVlO1xyXG4vLyAgICAgc2V0Vm9sdW1lKG5ld1ZvbHVtZSk7XHJcbi8vICAgICBoYW5kbGVWb2x1bWUoK25ld1ZvbHVtZSlcclxuLy8gICB9O1xyXG5cclxuLy8gICByZXR1cm4gKFxyXG4vLyAgICAgPGRpdiBjbGFzc05hbWU9e2NsYXNzTmFtZXMoc3R5bGVzLmJhclZvbHVtZSwgc3R5bGVzLnZvbHVtZSl9PlxyXG4vLyAgICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLnZvbHVtZUNvbnRlbnR9PlxyXG4vLyAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZXMudm9sdW1lSW1hZ2V9PlxyXG4vLyAgICAgICAgICAgPHN2ZyBjbGFzc05hbWU9e3N0eWxlcy52b2x1bWVTdmd9PlxyXG4vLyAgICAgICAgICAgICA8dXNlIGhyZWY9XCIvaW1nL2ljb24vc3ByaXRlLnN2ZyNpY29uLXZvbHVtZVwiPjwvdXNlPlxyXG4vLyAgICAgICAgICAgPC9zdmc+XHJcbi8vICAgICAgICAgPC9kaXY+XHJcbi8vICAgICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy52b2x1bWVQcm9ncmVzc30+XHJcbi8vICAgICAgICAgICA8aW5wdXRcclxuLy8gICAgICAgICAgICAgY2xhc3NOYW1lPXtjbGFzc05hbWVzKHN0eWxlcy52b2x1bWVQcm9ncmVzc0xpbmUsIHN0eWxlcy5zbGlkZXJQcm9ncmVzcyl9XHJcbi8vICAgICAgICAgICAgIHR5cGU9XCJyYW5nZVwiXHJcbi8vICAgICAgICAgICAgIG5hbWU9XCJyYW5nZVwiXHJcbi8vICAgICAgICAgICAgIG1pbj17MH1cclxuLy8gICAgICAgICAgICAgdmFsdWU9e3ZvbHVtZX1cclxuLy8gICAgICAgICAgICAgbWF4PXsxMDB9XHJcbi8vICAgICAgICAgICAgIG9uQ2hhbmdlPXtvbkNoYW5nZX1cclxuLy8gICAgICAgICAgICAgc3RlcD17MX1cclxuLy8gICAgICAgICAgIC8+XHJcbi8vICAgICAgICAgPC9kaXY+XHJcbi8vICAgICAgIDwvZGl2PlxyXG4vLyAgICAgPC9kaXY+XHJcbi8vICAgKTtcclxuLy8gfSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/BarVolume/BarVolume.tsx\n"));

/***/ })

});