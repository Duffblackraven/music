/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/components/BarVolume/BarVolume.tsx":
/*!************************************************!*\
  !*** ./src/components/BarVolume/BarVolume.tsx ***!
  \************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("// import styles from \"./BarVolume.module.css\";\n// import classNames from \"classnames\";\n// import { useState } from \"react\";\n// type BarVolumeProps = {\n//   handleVolume: any;\n// };\n// export default function BarVolume({ handleVolume }: BarVolumeProps) {\n//   const [volume, setVolume] = useState(\"\");\n//   const onChange = (e: any) => {\n//     let newVolume = e.target.value;\n//     setVolume(newVolume);\n//     handleVolume(+newVolume)\n//   };\n//   return (\n//     <div className={classNames(styles.barVolume, styles.volume)}>\n//       <div className={styles.volumeContent}>\n//         <div className={styles.volumeImage}>\n//           <svg className={styles.volumeSvg}>\n//             <use href=\"/img/icon/sprite.svg#icon-volume\"></use>\n//           </svg>\n//         </div>\n//         <div className={styles.volumeProgress}>\n//           <input\n//             className={classNames(styles.volumeProgressLine, styles.sliderProgress)}\n//             type=\"range\"\n//             name=\"range\"\n//             min={0}\n//             value={volume}\n//             max={100}\n//             onChange={onChange}\n//             step={1}\n//           />\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb21wb25lbnRzL0JhclZvbHVtZS9CYXJWb2x1bWUudHN4IiwibWFwcGluZ3MiOiJBQUFBLCtDQUErQztBQUMvQyx1Q0FBdUM7QUFDdkMsb0NBQW9DO0FBRXBDLDBCQUEwQjtBQUMxQix1QkFBdUI7QUFDdkIsS0FBSztBQUVMLHdFQUF3RTtBQUV4RSw4Q0FBOEM7QUFDOUMsbUNBQW1DO0FBQ25DLHNDQUFzQztBQUN0Qyw0QkFBNEI7QUFDNUIsK0JBQStCO0FBQy9CLE9BQU87QUFFUCxhQUFhO0FBQ2Isb0VBQW9FO0FBQ3BFLCtDQUErQztBQUMvQywrQ0FBK0M7QUFDL0MsK0NBQStDO0FBQy9DLGtFQUFrRTtBQUNsRSxtQkFBbUI7QUFDbkIsaUJBQWlCO0FBQ2pCLGtEQUFrRDtBQUNsRCxtQkFBbUI7QUFDbkIsdUZBQXVGO0FBQ3ZGLDJCQUEyQjtBQUMzQiwyQkFBMkI7QUFDM0Isc0JBQXNCO0FBQ3RCLDZCQUE2QjtBQUM3Qix3QkFBd0I7QUFDeEIsa0NBQWtDO0FBQ2xDLHVCQUF1QjtBQUN2QixlQUFlO0FBQ2YsaUJBQWlCO0FBQ2pCLGVBQWU7QUFDZixhQUFhO0FBQ2IsT0FBTztBQUNQLElBQUkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2NvbXBvbmVudHMvQmFyVm9sdW1lL0JhclZvbHVtZS50c3g/NWQ4MyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbXBvcnQgc3R5bGVzIGZyb20gXCIuL0JhclZvbHVtZS5tb2R1bGUuY3NzXCI7XHJcbi8vIGltcG9ydCBjbGFzc05hbWVzIGZyb20gXCJjbGFzc25hbWVzXCI7XHJcbi8vIGltcG9ydCB7IHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCI7XHJcblxyXG4vLyB0eXBlIEJhclZvbHVtZVByb3BzID0ge1xyXG4vLyAgIGhhbmRsZVZvbHVtZTogYW55O1xyXG4vLyB9O1xyXG5cclxuLy8gZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gQmFyVm9sdW1lKHsgaGFuZGxlVm9sdW1lIH06IEJhclZvbHVtZVByb3BzKSB7XHJcblxyXG4vLyAgIGNvbnN0IFt2b2x1bWUsIHNldFZvbHVtZV0gPSB1c2VTdGF0ZShcIlwiKTtcclxuLy8gICBjb25zdCBvbkNoYW5nZSA9IChlOiBhbnkpID0+IHtcclxuLy8gICAgIGxldCBuZXdWb2x1bWUgPSBlLnRhcmdldC52YWx1ZTtcclxuLy8gICAgIHNldFZvbHVtZShuZXdWb2x1bWUpO1xyXG4vLyAgICAgaGFuZGxlVm9sdW1lKCtuZXdWb2x1bWUpXHJcbi8vICAgfTtcclxuXHJcbi8vICAgcmV0dXJuIChcclxuLy8gICAgIDxkaXYgY2xhc3NOYW1lPXtjbGFzc05hbWVzKHN0eWxlcy5iYXJWb2x1bWUsIHN0eWxlcy52b2x1bWUpfT5cclxuLy8gICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy52b2x1bWVDb250ZW50fT5cclxuLy8gICAgICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLnZvbHVtZUltYWdlfT5cclxuLy8gICAgICAgICAgIDxzdmcgY2xhc3NOYW1lPXtzdHlsZXMudm9sdW1lU3ZnfT5cclxuLy8gICAgICAgICAgICAgPHVzZSBocmVmPVwiL2ltZy9pY29uL3Nwcml0ZS5zdmcjaWNvbi12b2x1bWVcIj48L3VzZT5cclxuLy8gICAgICAgICAgIDwvc3ZnPlxyXG4vLyAgICAgICAgIDwvZGl2PlxyXG4vLyAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZXMudm9sdW1lUHJvZ3Jlc3N9PlxyXG4vLyAgICAgICAgICAgPGlucHV0XHJcbi8vICAgICAgICAgICAgIGNsYXNzTmFtZT17Y2xhc3NOYW1lcyhzdHlsZXMudm9sdW1lUHJvZ3Jlc3NMaW5lLCBzdHlsZXMuc2xpZGVyUHJvZ3Jlc3MpfVxyXG4vLyAgICAgICAgICAgICB0eXBlPVwicmFuZ2VcIlxyXG4vLyAgICAgICAgICAgICBuYW1lPVwicmFuZ2VcIlxyXG4vLyAgICAgICAgICAgICBtaW49ezB9XHJcbi8vICAgICAgICAgICAgIHZhbHVlPXt2b2x1bWV9XHJcbi8vICAgICAgICAgICAgIG1heD17MTAwfVxyXG4vLyAgICAgICAgICAgICBvbkNoYW5nZT17b25DaGFuZ2V9XHJcbi8vICAgICAgICAgICAgIHN0ZXA9ezF9XHJcbi8vICAgICAgICAgICAvPlxyXG4vLyAgICAgICAgIDwvZGl2PlxyXG4vLyAgICAgICA8L2Rpdj5cclxuLy8gICAgIDwvZGl2PlxyXG4vLyAgICk7XHJcbi8vIH0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/BarVolume/BarVolume.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/components/BarVolume/index.tsx":
/*!********************************************!*\
  !*** ./src/components/BarVolume/index.tsx ***!
  \********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BarVolume: function() { return /* reexport default from dynamic */ _BarVolume__WEBPACK_IMPORTED_MODULE_0___default.a; }\n/* harmony export */ });\n/* harmony import */ var _BarVolume__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./BarVolume */ \"(app-pages-browser)/./src/components/BarVolume/BarVolume.tsx\");\n/* harmony import */ var _BarVolume__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_BarVolume__WEBPACK_IMPORTED_MODULE_0__);\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb21wb25lbnRzL0JhclZvbHVtZS9pbmRleC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWtEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9jb21wb25lbnRzL0JhclZvbHVtZS9pbmRleC50c3g/YWE2YyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBkZWZhdWx0IGFzIEJhclZvbHVtZSB9IGZyb20gXCIuL0JhclZvbHVtZVwiIl0sIm5hbWVzIjpbImRlZmF1bHQiLCJCYXJWb2x1bWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/BarVolume/index.tsx\n"));

/***/ })

});