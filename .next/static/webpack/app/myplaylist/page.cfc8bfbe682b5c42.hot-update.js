/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/myplaylist/page",{

/***/ "(app-pages-browser)/./src/components/CenterBlock/CenterBlock.tsx":
/*!****************************************************!*\
  !*** ./src/components/CenterBlock/CenterBlock.tsx ***!
  \****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("// \"use client\"\n// import styles from \"./CenterBlock.module.css\";\n// import React from \"react\";\n// import dynamic from \"next/dynamic\";\n// import { FilterBlock } from \"@/components/FilterBlock\";\n// import { SearchBar } from \"@/components/SearchBar\";\n// import { ContentTitle } from \"@/components/ContentTitle\";\n// import { setPlaylistNumber } from \"@/store/features/tracksSlice\";\n// import { useAppDispatch } from \"@/types/hooks\";\n// type centerBlockType = {\n//   playlistID: string,\n//   isFilter: boolean,\n// };\n// export default function CenterBlock({ playlistID, isFilter }: centerBlockType) {\n//   const dispatcher = useAppDispatch();\n//   dispatcher(setPlaylistNumber(playlistID));\n//   const ContentPlaylistWithCustomLoading = dynamic(() => import(\"../ContentPlaylist/ContentPlaylist\"), {\n//     loading: () => <p className={styles.playlistTitleCol}>Загрузка...</p>,\n//   })\n//   let centerBlockTitle;\n//   switch (playlistID) {\n//     case \"1\":\n//       centerBlockTitle = \"Плейлист дня\";\n//       break;\n//     case \"2\":\n//       centerBlockTitle = \"100 танцевальных хитов\";\n//       break;\n//     case \"3\":\n//       centerBlockTitle = \"Инди заряд\";\n//       break;\n//     case \"liked\":\n//       centerBlockTitle = \"Мой плейлист\";\n//       break;\n//     default:\n//       centerBlockTitle = \"Треки\";\n//       break;\n//   }\n//   return (\n//     <div className={styles.mainCenterBlock}>\n//       <SearchBar />\n//       <h2 className={styles.centerBlockH2}>{centerBlockTitle}</h2>\n//       {isFilter && <FilterBlock />}\n//       <div className={styles.centerBlockContent}>\n//         <ContentTitle />\n//         <ContentPlaylistWithCustomLoading />\n//       </div>\n//     </div>\n//   );\n// }\n// \"use client\"\n// import styles from \"./CenterBlock.module.css\";\n// import React from \"react\";\n// import dynamic from \"next/dynamic\";\n// import { FilterBlock } from \"@/components/FilterBlock\";\n// import { SearchBar } from \"@/components/SearchBar\";\n// import { ContentTitle } from \"@/components/ContentTitle\";\n// import { setPlaylistNumber } from \"@/store/features/tracksSlice\";\n// import { useAppDispatch } from \"@/types/hooks\";\n// type centerBlockType = {\n//   playlistID: string,\n//   isFilter: boolean,\n// };\n// export default function CenterBlock({ playlistID, isFilter }: centerBlockType) {\n//   const dispatcher = useAppDispatch();\n//   dispatcher(setPlaylistNumber(playlistID));\n//   const ContentPlaylistWithCustomLoading = dynamic(() => import(\"../ContentPlaylist/ContentPlaylist\"), {\n//     loading: () => <p className={styles.playlistTitleCol}>Загрузка...</p>,\n//   })\n//   let centerBlockTitle;\n//   switch (playlistID) {\n//     case \"1\":\n//       centerBlockTitle = \"Плейлист дня\";\n//       break;\n//     case \"2\":\n//       centerBlockTitle = \"100 танцевальных хитов\";\n//       break;\n//     case \"3\":\n//       centerBlockTitle = \"Инди заряд\";\n//       break;\n//     default:\n//       centerBlockTitle = \"Треки\";\n//       break;\n//   }\n//   return (\n//     <div className={styles.mainCenterBlock}>\n//       <SearchBar />\n//       <h2 className={styles.centerBlockH2}>{centerBlockTitle}</h2>\n//       {isFilter && <FilterBlock />}\n//       <div className={styles.centerBlockContent}>\n//         <ContentTitle />\n//         <ContentPlaylistWithCustomLoading />\n//       </div>\n//     </div>\n//   );\n// }\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb21wb25lbnRzL0NlbnRlckJsb2NrL0NlbnRlckJsb2NrLnRzeCIsIm1hcHBpbmdzIjoiQUFBQSxlQUFlO0FBRWYsaURBQWlEO0FBQ2pELDZCQUE2QjtBQUM3QixzQ0FBc0M7QUFDdEMsMERBQTBEO0FBQzFELHNEQUFzRDtBQUN0RCw0REFBNEQ7QUFDNUQsb0VBQW9FO0FBQ3BFLGtEQUFrRDtBQUVsRCwyQkFBMkI7QUFDM0Isd0JBQXdCO0FBQ3hCLHVCQUF1QjtBQUN2QixLQUFLO0FBRUwsbUZBQW1GO0FBRW5GLHlDQUF5QztBQUN6QywrQ0FBK0M7QUFFL0MsMkdBQTJHO0FBQzNHLDZFQUE2RTtBQUM3RSxPQUFPO0FBRVAsMEJBQTBCO0FBQzFCLDBCQUEwQjtBQUMxQixnQkFBZ0I7QUFDaEIsMkNBQTJDO0FBQzNDLGVBQWU7QUFDZixnQkFBZ0I7QUFDaEIscURBQXFEO0FBQ3JELGVBQWU7QUFDZixnQkFBZ0I7QUFDaEIseUNBQXlDO0FBQ3pDLGVBQWU7QUFDZixvQkFBb0I7QUFDcEIsMkNBQTJDO0FBQzNDLGVBQWU7QUFDZixlQUFlO0FBQ2Ysb0NBQW9DO0FBQ3BDLGVBQWU7QUFDZixNQUFNO0FBRU4sYUFBYTtBQUNiLCtDQUErQztBQUMvQyxzQkFBc0I7QUFDdEIscUVBQXFFO0FBQ3JFLHNDQUFzQztBQUN0QyxvREFBb0Q7QUFDcEQsMkJBQTJCO0FBQzNCLCtDQUErQztBQUMvQyxlQUFlO0FBQ2YsYUFBYTtBQUNiLE9BQU87QUFDUCxJQUFJO0FBRUosZUFBZTtBQUVmLGlEQUFpRDtBQUNqRCw2QkFBNkI7QUFDN0Isc0NBQXNDO0FBQ3RDLDBEQUEwRDtBQUMxRCxzREFBc0Q7QUFDdEQsNERBQTREO0FBQzVELG9FQUFvRTtBQUNwRSxrREFBa0Q7QUFFbEQsMkJBQTJCO0FBQzNCLHdCQUF3QjtBQUN4Qix1QkFBdUI7QUFDdkIsS0FBSztBQUVMLG1GQUFtRjtBQUVuRix5Q0FBeUM7QUFDekMsK0NBQStDO0FBRS9DLDJHQUEyRztBQUMzRyw2RUFBNkU7QUFDN0UsT0FBTztBQUVQLDBCQUEwQjtBQUMxQiwwQkFBMEI7QUFDMUIsZ0JBQWdCO0FBQ2hCLDJDQUEyQztBQUMzQyxlQUFlO0FBQ2YsZ0JBQWdCO0FBQ2hCLHFEQUFxRDtBQUNyRCxlQUFlO0FBQ2YsZ0JBQWdCO0FBQ2hCLHlDQUF5QztBQUN6QyxlQUFlO0FBQ2YsZUFBZTtBQUNmLG9DQUFvQztBQUNwQyxlQUFlO0FBQ2YsTUFBTTtBQUVOLGFBQWE7QUFDYiwrQ0FBK0M7QUFDL0Msc0JBQXNCO0FBQ3RCLHFFQUFxRTtBQUNyRSxzQ0FBc0M7QUFDdEMsb0RBQW9EO0FBQ3BELDJCQUEyQjtBQUMzQiwrQ0FBK0M7QUFDL0MsZUFBZTtBQUNmLGFBQWE7QUFDYixPQUFPO0FBQ1AsSUFBSSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvY29tcG9uZW50cy9DZW50ZXJCbG9jay9DZW50ZXJCbG9jay50c3g/MGZmNCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBcInVzZSBjbGllbnRcIlxyXG5cclxuLy8gaW1wb3J0IHN0eWxlcyBmcm9tIFwiLi9DZW50ZXJCbG9jay5tb2R1bGUuY3NzXCI7XHJcbi8vIGltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcclxuLy8gaW1wb3J0IGR5bmFtaWMgZnJvbSBcIm5leHQvZHluYW1pY1wiO1xyXG4vLyBpbXBvcnQgeyBGaWx0ZXJCbG9jayB9IGZyb20gXCJAL2NvbXBvbmVudHMvRmlsdGVyQmxvY2tcIjtcclxuLy8gaW1wb3J0IHsgU2VhcmNoQmFyIH0gZnJvbSBcIkAvY29tcG9uZW50cy9TZWFyY2hCYXJcIjtcclxuLy8gaW1wb3J0IHsgQ29udGVudFRpdGxlIH0gZnJvbSBcIkAvY29tcG9uZW50cy9Db250ZW50VGl0bGVcIjtcclxuLy8gaW1wb3J0IHsgc2V0UGxheWxpc3ROdW1iZXIgfSBmcm9tIFwiQC9zdG9yZS9mZWF0dXJlcy90cmFja3NTbGljZVwiO1xyXG4vLyBpbXBvcnQgeyB1c2VBcHBEaXNwYXRjaCB9IGZyb20gXCJAL3R5cGVzL2hvb2tzXCI7XHJcblxyXG4vLyB0eXBlIGNlbnRlckJsb2NrVHlwZSA9IHtcclxuLy8gICBwbGF5bGlzdElEOiBzdHJpbmcsXHJcbi8vICAgaXNGaWx0ZXI6IGJvb2xlYW4sXHJcbi8vIH07XHJcblxyXG4vLyBleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBDZW50ZXJCbG9jayh7IHBsYXlsaXN0SUQsIGlzRmlsdGVyIH06IGNlbnRlckJsb2NrVHlwZSkge1xyXG5cclxuLy8gICBjb25zdCBkaXNwYXRjaGVyID0gdXNlQXBwRGlzcGF0Y2goKTtcclxuLy8gICBkaXNwYXRjaGVyKHNldFBsYXlsaXN0TnVtYmVyKHBsYXlsaXN0SUQpKTtcclxuXHJcbi8vICAgY29uc3QgQ29udGVudFBsYXlsaXN0V2l0aEN1c3RvbUxvYWRpbmcgPSBkeW5hbWljKCgpID0+IGltcG9ydChcIi4uL0NvbnRlbnRQbGF5bGlzdC9Db250ZW50UGxheWxpc3RcIiksIHtcclxuLy8gICAgIGxvYWRpbmc6ICgpID0+IDxwIGNsYXNzTmFtZT17c3R5bGVzLnBsYXlsaXN0VGl0bGVDb2x9PtCX0LDQs9GA0YPQt9C60LAuLi48L3A+LFxyXG4vLyAgIH0pXHJcblxyXG4vLyAgIGxldCBjZW50ZXJCbG9ja1RpdGxlO1xyXG4vLyAgIHN3aXRjaCAocGxheWxpc3RJRCkge1xyXG4vLyAgICAgY2FzZSBcIjFcIjpcclxuLy8gICAgICAgY2VudGVyQmxvY2tUaXRsZSA9IFwi0J/Qu9C10LnQu9C40YHRgiDQtNC90Y9cIjtcclxuLy8gICAgICAgYnJlYWs7XHJcbi8vICAgICBjYXNlIFwiMlwiOlxyXG4vLyAgICAgICBjZW50ZXJCbG9ja1RpdGxlID0gXCIxMDAg0YLQsNC90YbQtdCy0LDQu9GM0L3Ri9GFINGF0LjRgtC+0LJcIjtcclxuLy8gICAgICAgYnJlYWs7XHJcbi8vICAgICBjYXNlIFwiM1wiOlxyXG4vLyAgICAgICBjZW50ZXJCbG9ja1RpdGxlID0gXCLQmNC90LTQuCDQt9Cw0YDRj9C0XCI7XHJcbi8vICAgICAgIGJyZWFrO1xyXG4vLyAgICAgY2FzZSBcImxpa2VkXCI6XHJcbi8vICAgICAgIGNlbnRlckJsb2NrVGl0bGUgPSBcItCc0L7QuSDQv9C70LXQudC70LjRgdGCXCI7XHJcbi8vICAgICAgIGJyZWFrO1xyXG4vLyAgICAgZGVmYXVsdDpcclxuLy8gICAgICAgY2VudGVyQmxvY2tUaXRsZSA9IFwi0KLRgNC10LrQuFwiO1xyXG4vLyAgICAgICBicmVhaztcclxuLy8gICB9XHJcblxyXG4vLyAgIHJldHVybiAoXHJcbi8vICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLm1haW5DZW50ZXJCbG9ja30+XHJcbi8vICAgICAgIDxTZWFyY2hCYXIgLz5cclxuLy8gICAgICAgPGgyIGNsYXNzTmFtZT17c3R5bGVzLmNlbnRlckJsb2NrSDJ9PntjZW50ZXJCbG9ja1RpdGxlfTwvaDI+XHJcbi8vICAgICAgIHtpc0ZpbHRlciAmJiA8RmlsdGVyQmxvY2sgLz59XHJcbi8vICAgICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZXMuY2VudGVyQmxvY2tDb250ZW50fT5cclxuLy8gICAgICAgICA8Q29udGVudFRpdGxlIC8+XHJcbi8vICAgICAgICAgPENvbnRlbnRQbGF5bGlzdFdpdGhDdXN0b21Mb2FkaW5nIC8+XHJcbi8vICAgICAgIDwvZGl2PlxyXG4vLyAgICAgPC9kaXY+XHJcbi8vICAgKTtcclxuLy8gfVxyXG5cclxuLy8gXCJ1c2UgY2xpZW50XCJcclxuXHJcbi8vIGltcG9ydCBzdHlsZXMgZnJvbSBcIi4vQ2VudGVyQmxvY2subW9kdWxlLmNzc1wiO1xyXG4vLyBpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XHJcbi8vIGltcG9ydCBkeW5hbWljIGZyb20gXCJuZXh0L2R5bmFtaWNcIjtcclxuLy8gaW1wb3J0IHsgRmlsdGVyQmxvY2sgfSBmcm9tIFwiQC9jb21wb25lbnRzL0ZpbHRlckJsb2NrXCI7XHJcbi8vIGltcG9ydCB7IFNlYXJjaEJhciB9IGZyb20gXCJAL2NvbXBvbmVudHMvU2VhcmNoQmFyXCI7XHJcbi8vIGltcG9ydCB7IENvbnRlbnRUaXRsZSB9IGZyb20gXCJAL2NvbXBvbmVudHMvQ29udGVudFRpdGxlXCI7XHJcbi8vIGltcG9ydCB7IHNldFBsYXlsaXN0TnVtYmVyIH0gZnJvbSBcIkAvc3RvcmUvZmVhdHVyZXMvdHJhY2tzU2xpY2VcIjtcclxuLy8gaW1wb3J0IHsgdXNlQXBwRGlzcGF0Y2ggfSBmcm9tIFwiQC90eXBlcy9ob29rc1wiO1xyXG5cclxuLy8gdHlwZSBjZW50ZXJCbG9ja1R5cGUgPSB7XHJcbi8vICAgcGxheWxpc3RJRDogc3RyaW5nLFxyXG4vLyAgIGlzRmlsdGVyOiBib29sZWFuLFxyXG4vLyB9O1xyXG5cclxuLy8gZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gQ2VudGVyQmxvY2soeyBwbGF5bGlzdElELCBpc0ZpbHRlciB9OiBjZW50ZXJCbG9ja1R5cGUpIHtcclxuXHJcbi8vICAgY29uc3QgZGlzcGF0Y2hlciA9IHVzZUFwcERpc3BhdGNoKCk7XHJcbi8vICAgZGlzcGF0Y2hlcihzZXRQbGF5bGlzdE51bWJlcihwbGF5bGlzdElEKSk7XHJcblxyXG4vLyAgIGNvbnN0IENvbnRlbnRQbGF5bGlzdFdpdGhDdXN0b21Mb2FkaW5nID0gZHluYW1pYygoKSA9PiBpbXBvcnQoXCIuLi9Db250ZW50UGxheWxpc3QvQ29udGVudFBsYXlsaXN0XCIpLCB7XHJcbi8vICAgICBsb2FkaW5nOiAoKSA9PiA8cCBjbGFzc05hbWU9e3N0eWxlcy5wbGF5bGlzdFRpdGxlQ29sfT7Ql9Cw0LPRgNGD0LfQutCwLi4uPC9wPixcclxuLy8gICB9KVxyXG5cclxuLy8gICBsZXQgY2VudGVyQmxvY2tUaXRsZTtcclxuLy8gICBzd2l0Y2ggKHBsYXlsaXN0SUQpIHtcclxuLy8gICAgIGNhc2UgXCIxXCI6XHJcbi8vICAgICAgIGNlbnRlckJsb2NrVGl0bGUgPSBcItCf0LvQtdC50LvQuNGB0YIg0LTQvdGPXCI7XHJcbi8vICAgICAgIGJyZWFrO1xyXG4vLyAgICAgY2FzZSBcIjJcIjpcclxuLy8gICAgICAgY2VudGVyQmxvY2tUaXRsZSA9IFwiMTAwINGC0LDQvdGG0LXQstCw0LvRjNC90YvRhSDRhdC40YLQvtCyXCI7XHJcbi8vICAgICAgIGJyZWFrO1xyXG4vLyAgICAgY2FzZSBcIjNcIjpcclxuLy8gICAgICAgY2VudGVyQmxvY2tUaXRsZSA9IFwi0JjQvdC00Lgg0LfQsNGA0Y/QtFwiO1xyXG4vLyAgICAgICBicmVhaztcclxuLy8gICAgIGRlZmF1bHQ6XHJcbi8vICAgICAgIGNlbnRlckJsb2NrVGl0bGUgPSBcItCi0YDQtdC60LhcIjtcclxuLy8gICAgICAgYnJlYWs7XHJcbi8vICAgfVxyXG5cclxuLy8gICByZXR1cm4gKFxyXG4vLyAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy5tYWluQ2VudGVyQmxvY2t9PlxyXG4vLyAgICAgICA8U2VhcmNoQmFyIC8+XHJcbi8vICAgICAgIDxoMiBjbGFzc05hbWU9e3N0eWxlcy5jZW50ZXJCbG9ja0gyfT57Y2VudGVyQmxvY2tUaXRsZX08L2gyPlxyXG4vLyAgICAgICB7aXNGaWx0ZXIgJiYgPEZpbHRlckJsb2NrIC8+fVxyXG4vLyAgICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLmNlbnRlckJsb2NrQ29udGVudH0+XHJcbi8vICAgICAgICAgPENvbnRlbnRUaXRsZSAvPlxyXG4vLyAgICAgICAgIDxDb250ZW50UGxheWxpc3RXaXRoQ3VzdG9tTG9hZGluZyAvPlxyXG4vLyAgICAgICA8L2Rpdj5cclxuLy8gICAgIDwvZGl2PlxyXG4vLyAgICk7XHJcbi8vIH0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/CenterBlock/CenterBlock.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/components/CenterBlock/index.tsx":
/*!**********************************************!*\
  !*** ./src/components/CenterBlock/index.tsx ***!
  \**********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CenterBlock: function() { return /* reexport default from dynamic */ _CenterBlock__WEBPACK_IMPORTED_MODULE_0___default.a; }\n/* harmony export */ });\n/* harmony import */ var _CenterBlock__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CenterBlock */ \"(app-pages-browser)/./src/components/CenterBlock/CenterBlock.tsx\");\n/* harmony import */ var _CenterBlock__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_CenterBlock__WEBPACK_IMPORTED_MODULE_0__);\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb21wb25lbnRzL0NlbnRlckJsb2NrL2luZGV4LnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBc0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2NvbXBvbmVudHMvQ2VudGVyQmxvY2svaW5kZXgudHN4P2U2ZmQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgZGVmYXVsdCBhcyBDZW50ZXJCbG9jayB9IGZyb20gXCIuL0NlbnRlckJsb2NrXCIiXSwibmFtZXMiOlsiZGVmYXVsdCIsIkNlbnRlckJsb2NrIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/CenterBlock/index.tsx\n"));

/***/ })

});