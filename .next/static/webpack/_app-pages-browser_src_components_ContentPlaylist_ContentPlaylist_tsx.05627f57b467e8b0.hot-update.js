"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("_app-pages-browser_src_components_ContentPlaylist_ContentPlaylist_tsx",{

/***/ "(app-pages-browser)/./src/api/api.tsx":
/*!*************************!*\
  !*** ./src/api/api.tsx ***!
  \*************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addTrackToPlaylist: function() { return /* binding */ addTrackToPlaylist; },\n/* harmony export */   getLikedTracks: function() { return /* binding */ getLikedTracks; },\n/* harmony export */   getToken: function() { return /* binding */ getToken; },\n/* harmony export */   getTracks: function() { return /* binding */ getTracks; },\n/* harmony export */   login: function() { return /* binding */ login; },\n/* harmony export */   refreshToken: function() { return /* binding */ refreshToken; },\n/* harmony export */   register: function() { return /* binding */ register; },\n/* harmony export */   removeTrackFromPlaylist: function() { return /* binding */ removeTrackFromPlaylist; }\n/* harmony export */ });\nconst API_URL = \"https://skypro-music-api.skyeng.tech/catalog/\";\nconst TRACK = \"track/\";\nconst ALL = \"all/\";\nconst FAVORITE = \"favorite/\";\nconst SELECTION = \"selection/\";\nconst API_URL_USER = \"https://skypro-music-api.skyeng.tech/user/\";\nconst LOGIN = \"login/\";\nconst SIGNUP = \"signup/\";\nconst TOKEN = \"token/\";\nconst TOKEN_REFRESH = \"token/refresh/\";\nasync function getTracks(playlistID) {\n    try {\n        const response = await fetch(API_URL + (playlistID ? SELECTION + playlistID : TRACK + ALL));\n        if (!response.ok) {\n            if (response.status === 401) {\n                throw new Error(\"No authorization\");\n            } else {\n                throw new Error(\"HTTP error! Status: \".concat(response.status));\n            }\n        }\n        const data = await response.json();\n        return data;\n    } catch (error) {\n        console.warn(error);\n        throw error;\n    }\n}\nasync function getLikedTracks(userToken) {\n    return fetch(API_URL + TRACK + FAVORITE + ALL, {\n        method: \"GET\",\n        headers: {\n            Authorization: \"Bearer \".concat(userToken)\n        }\n    }).then((response)=>{\n        if (response.status === 400) {\n            throw new Error(\"Incorrect email or password.\");\n        }\n        if (response.status === 401) {\n            throw new Error(\"Пользователь не найден\");\n        }\n        if (response.status === 500) {\n            throw new Error(\"Ошибка на сервере.\");\n        }\n        return response.json();\n    });\n}\nasync function login(param) {\n    let { email, password } = param;\n    return fetch(API_URL_USER + LOGIN, {\n        method: \"POST\",\n        body: JSON.stringify({\n            email,\n            password\n        }),\n        headers: {\n            \"content-type\": \"application/json\"\n        }\n    }).then((response)=>{\n        if (response.status === 400) {\n            throw new Error(\"Incorrect email or password.\");\n        }\n        if (response.status === 401) {\n            throw new Error(\"Пользователь не найден\");\n        }\n        if (response.status === 500) {\n            throw new Error(\"Ошибка на сервере.\");\n        }\n        return response.json();\n    });\n}\nasync function register(param) {\n    let { username, email, password } = param;\n    return fetch(API_URL_USER + SIGNUP, {\n        method: \"POST\",\n        body: JSON.stringify({\n            email,\n            password,\n            username\n        }),\n        headers: {\n            \"content-type\": \"application/json\"\n        }\n    }).then((response)=>{\n        if (response.status === 400) {\n            throw new Error(\"Ошибка при регистрации.\");\n        }\n        return response.json();\n    });\n}\nasync function getToken(param) {\n    let { email, password } = param;\n    return fetch(API_URL_USER + TOKEN, {\n        method: \"POST\",\n        body: JSON.stringify({\n            email,\n            password\n        }),\n        headers: {\n            \"content-type\": \"application/json\"\n        }\n    }).then((response)=>{\n        if (response.status === 400) {\n            throw new Error(\"Неверный адрес электронной почты или пароль.\");\n        }\n        if (response.status === 401) {\n            throw new Error(\"Пользователь не найден\");\n        }\n        if (response.status === 500) {\n            throw new Error(\"Ошибка на сервере.\");\n        }\n        return response.json();\n    });\n}\nasync function refreshToken(refresh) {\n    return fetch(API_URL_USER + TOKEN_REFRESH, {\n        method: \"POST\",\n        body: JSON.stringify({\n            refresh: refresh\n        }),\n        headers: {\n            \"content-type\": \"application/json\"\n        }\n    }).then((response)=>{\n        if (response.status === 400) {\n            throw new Error(\"Одна ошибка и ты ошибся\");\n        }\n        if (response.status === 401) {\n            throw new Error(\"Ошибка при получении токена.\");\n        }\n        if (response.status === 500) {\n            throw new Error(\"Ошибка на сервере.\");\n        }\n        return response.json();\n    });\n}\nasync function addTrackToPlaylist(trackId) {\n    return fetch(API_URL + TRACK + \"\".concat(trackId, \"/\") + FAVORITE, {\n        method: \"POST\",\n        body: JSON.stringify({\n            trackId\n        }),\n        headers: {\n            Authorization: \"Bearer \".concat(localStorage.getItem(\"userToken\"))\n        }\n    }).then((response)=>{\n        if (response.status === 400) {\n            throw new Error(\"Ошибка добавления трека.\");\n        }\n        if (response.status === 401) {\n            throw new Error(\"Ошибка при получении токена.\");\n        }\n        return response.json();\n    });\n}\nasync function removeTrackFromPlaylist(trackId) {\n    return fetch(API_URL + TRACK + \"\".concat(trackId, \"/\") + FAVORITE, {\n        method: \"DELETE\",\n        body: JSON.stringify({\n            id: trackId\n        }),\n        headers: {\n            \"content-type\": \"application/json\",\n            Authorization: \"Bearer \".concat(localStorage.getItem(\"userToken\"))\n        }\n    }).then((response)=>{\n        if (response.status === 400) {\n            throw new Error(\"Ошибка удаления трека.\");\n        }\n        if (response.status === 401) {\n            throw new Error(\"Ошибка при получении токена.\");\n        }\n        return response.json();\n    });\n}\n // const API_URL = \"https://skypro-music-api.skyeng.tech/catalog/\";\n // const TRACK = \"track/\";\n // const ALL = \"all/\";\n // const FAVORITE = \"favorite/\";\n // const SELECTION = \"selection/\";\n // const API_URL_USER = \"https://skypro-music-api.skyeng.tech/user/\";\n // const LOGIN = \"login/\";\n // const SIGNUP = \"signup/\";\n // const TOKEN = \"token/\";\n // const TOKEN_REFRESH = \"token/refresh/\";\n // export async function getTracks(playlistID: number | null) {\n //     try {\n //         const response = await fetch(API_URL + (playlistID ? (SELECTION + playlistID) : (TRACK + ALL)));\n //         if (!response.ok) {\n //             if (response.status === 401) {\n //                 throw new Error(\"Нет авторизации\");\n //             } else {\n //                 throw new Error(`Ошибка! Статус: ${response.status}`);\n //             };\n //         };\n //         const data = await response.json();\n //         return data;\n //     } catch (error) {\n //         console.warn(error);\n //         throw error;\n //     };\n // };\n // export async function getLikedTracks(userToken: string) {\n //     return fetch(API_URL + TRACK + FAVORITE + ALL, {\n //         method: \"GET\",\n //         headers: {\n //             Authorization: `Bearer ${userToken}`,\n //         },\n //     }).then((response) => {\n //         if (response.status === 400) {\n //             throw new Error(\"Неверный адрес электронной почты или пароль.\");\n //         };\n //         if (response.status === 401) {\n //             throw new Error(\"Пользователь не найден.\");\n //         };\n //         if (response.status === 500) {\n //             throw new Error(\"Ошибка на сервере.\");\n //         };\n //         return response.json();\n //     });\n // };\n // type loginProps = {\n //     email: string;\n //     password: string;\n // };\n // export async function login({ email, password }: loginProps) {\n //     return fetch(API_URL_USER + LOGIN, {\n //         method: \"POST\",\n //         body: JSON.stringify({\n //             email,\n //             password,\n //         }),\n //         headers: {\n //             \"content-type\": \"application/json\",\n //         },\n //     }).then((response) => {\n //         if (response.status === 400) {\n //             throw new Error(\"Неверный адрес электронной почты или пароль.\");\n //         };\n //         if (response.status === 401) {\n //             throw new Error(\"Пользователь не найден.\");\n //         };\n //         if (response.status === 500) {\n //             throw new Error(\"Ошибка на сервере.\");\n //         };\n //         return response.json();\n //     });\n // };\n // type registerProps = {\n //     username: string\n //     email: string;\n //     password: string;\n // };\n // export async function register({ username, email, password }: registerProps) {\n //     return fetch(API_URL_USER + SIGNUP, {\n //         method: \"POST\",\n //         body: JSON.stringify({\n //             email,\n //             password,\n //             username,\n //         }),\n //         headers: {\n //             \"content-type\": \"application/json\",\n //         },\n //     }).then((response) => {\n //         if (response.status === 400) {\n //             throw new Error(\"Ошибка при регистрации.\");\n //         };\n //         return response.json();\n //     });\n // };\n // type getTokenProps = {\n //     email: string;\n //     password: string;\n // };\n // export async function getToken({ email, password }: getTokenProps) {\n //     return fetch(API_URL_USER + TOKEN, {\n //         method: \"POST\",\n //         body: JSON.stringify({\n //             email,\n //             password,\n //         }),\n //         headers: {\n //             \"content-type\": \"application/json\",\n //         },\n //     }).then((response) => {\n //         if (response.status === 400) {\n //             throw new Error(\"Неверный адрес электронной почты или пароль.\");\n //         };\n //         if (response.status === 401) {\n //             throw new Error(\"Пользователь не найден.\");\n //         };\n //         if (response.status === 500) {\n //             throw new Error(\"Ошибка на сервере.\");\n //         };\n //         return response.json();\n //     });\n // };\n // export async function refreshToken(refresh: string) {\n //     return fetch(API_URL_USER + TOKEN, {\n //         method: \"POST\",\n //         body: JSON.stringify({\n //             refresh: refresh,\n //         }),\n //         headers: {\n //             \"content-type\": \"application/json\",\n //         },\n //     }).then((response) => {\n //         if (response.status === 400) {\n //             throw new Error(\"Ошибка.\");\n //         };\n //         if (response.status === 401) {\n //             throw new Error(\"Ошибка при получении токена.\");\n //         };\n //         if (response.status === 500) {\n //             throw new Error(\"Ошибка на сервере.\");\n //         };\n //         return response.json();\n //     });\n // };\n // export async function addTrackToPlaylist(trackId: number) {\n //     return fetch(API_URL + TRACK + `${trackId}/` + FAVORITE, {\n //         method: \"POST\",\n //         body: JSON.stringify({\n //             trackId,\n //         }),\n //         headers: {\n //             Authorization: `Bearer ${localStorage.getItem(\"userToken\")}`,\n //         },\n //     }).then((response) => {\n //         if (response.status === 400) {\n //             throw new Error(\"Ошибка добавления трека.\");\n //         };\n //         if (response.status === 401) {\n //             throw new Error(\"Ошибка при получении токена.\");\n //         };\n //         return response.json();\n //     });\n // };\n // export async function removeTrackFromPlaylist(trackId: number) {\n //     return fetch(API_URL + TRACK + `${trackId}/` + FAVORITE, {\n //         method: \"DELETE\",\n //         body: JSON.stringify({\n //             id: trackId,\n //         }),\n //         headers: {\n //             \"content-type\": \"application/json\",\n //             Authorization: `Bearer ${localStorage.getItem(\"userToken\")}`,\n //         },\n //     }).then((response) => {\n //         if (response.status === 400) {\n //             throw new Error(\"Ошибка удаления трека.\");\n //         };\n //         if (response.status === 401) {\n //             throw new Error(\"Ошибка при получении токена.\");\n //         };\n //         return response.json();\n //     });\n // };\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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YTtDQUNiLDhCQUE4QjtDQUM5Qix5Q0FBeUM7Q0FDekMseURBQXlEO0NBQ3pELGFBQWE7Q0FDYix5Q0FBeUM7Q0FDekMsK0RBQStEO0NBQy9ELGFBQWE7Q0FDYixrQ0FBa0M7Q0FDbEMsVUFBVTtDQUNWLEtBQUsiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2FwaS9hcGkudHN4PzA4ZmIiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgQVBJX1VSTCA9IFwiaHR0cHM6Ly9za3lwcm8tbXVzaWMtYXBpLnNreWVuZy50ZWNoL2NhdGFsb2cvXCI7XHJcbmNvbnN0IFRSQUNLID0gXCJ0cmFjay9cIjtcclxuY29uc3QgQUxMID0gXCJhbGwvXCI7XHJcbmNvbnN0IEZBVk9SSVRFID0gXCJmYXZvcml0ZS9cIjtcclxuY29uc3QgU0VMRUNUSU9OID0gXCJzZWxlY3Rpb24vXCI7XHJcbmNvbnN0IEFQSV9VUkxfVVNFUiA9IFwiaHR0cHM6Ly9za3lwcm8tbXVzaWMtYXBpLnNreWVuZy50ZWNoL3VzZXIvXCI7XHJcbmNvbnN0IExPR0lOID0gXCJsb2dpbi9cIjtcclxuY29uc3QgU0lHTlVQID0gXCJzaWdudXAvXCI7XHJcbmNvbnN0IFRPS0VOID0gXCJ0b2tlbi9cIjtcclxuY29uc3QgVE9LRU5fUkVGUkVTSCA9IFwidG9rZW4vcmVmcmVzaC9cIjtcclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRUcmFja3MocGxheWxpc3RJRDogbnVtYmVyIHwgbnVsbCkge1xyXG4gICAgdHJ5IHtcclxuICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKEFQSV9VUkwgKyAocGxheWxpc3RJRCA/IChTRUxFQ1RJT04gKyBwbGF5bGlzdElEKSA6IChUUkFDSyArIEFMTCkpKTtcclxuICAgICAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XHJcbiAgICAgICAgICAgIGlmIChyZXNwb25zZS5zdGF0dXMgPT09IDQwMSkge1xyXG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTm8gYXV0aG9yaXphdGlvblwiKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgSFRUUCBlcnJvciEgU3RhdHVzOiAke3Jlc3BvbnNlLnN0YXR1c31gKTtcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XHJcbiAgICAgICAgcmV0dXJuIGRhdGE7XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgIGNvbnNvbGUud2FybihlcnJvcik7XHJcbiAgICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICB9O1xyXG59O1xyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldExpa2VkVHJhY2tzKHVzZXJUb2tlbjogc3RyaW5nKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goQVBJX1VSTCArIFRSQUNLICsgRkFWT1JJVEUgKyBBTEwsIHtcclxuICAgICAgICBtZXRob2Q6IFwiR0VUXCIsXHJcbiAgICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgICAgICBBdXRob3JpemF0aW9uOiBgQmVhcmVyICR7dXNlclRva2VufWAsXHJcbiAgICAgICAgfSxcclxuICAgIH0pLnRoZW4oKHJlc3BvbnNlKSA9PiB7XHJcbiAgICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PT0gNDAwKSB7XHJcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkluY29ycmVjdCBlbWFpbCBvciBwYXNzd29yZC5cIik7XHJcbiAgICAgICAgfTtcclxuICAgICAgICBpZiAocmVzcG9uc2Uuc3RhdHVzID09PSA0MDEpIHtcclxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwi0J/QvtC70YzQt9C+0LLQsNGC0LXQu9GMINC90LUg0L3QsNC50LTQtdC9XCIpO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PT0gNTAwKSB7XHJcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcItCe0YjQuNCx0LrQsCDQvdCwINGB0LXRgNCy0LXRgNC1LlwiKTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7XHJcbiAgICB9KTtcclxufTtcclxuXHJcbnR5cGUgbG9naW5Qcm9wcyA9IHtcclxuICAgIGVtYWlsOiBzdHJpbmc7XHJcbiAgICBwYXNzd29yZDogc3RyaW5nO1xyXG59O1xyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbG9naW4oeyBlbWFpbCwgcGFzc3dvcmQgfTogbG9naW5Qcm9wcykge1xyXG4gICAgcmV0dXJuIGZldGNoKEFQSV9VUkxfVVNFUiArIExPR0lOLCB7XHJcbiAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcclxuICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XHJcbiAgICAgICAgICAgIGVtYWlsLFxyXG4gICAgICAgICAgICBwYXNzd29yZCxcclxuICAgICAgICB9KSxcclxuICAgICAgICBoZWFkZXJzOiB7XHJcbiAgICAgICAgICAgIFwiY29udGVudC10eXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxyXG4gICAgICAgIH0sXHJcbiAgICB9KS50aGVuKChyZXNwb25zZSkgPT4ge1xyXG4gICAgICAgIGlmIChyZXNwb25zZS5zdGF0dXMgPT09IDQwMCkge1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbmNvcnJlY3QgZW1haWwgb3IgcGFzc3dvcmQuXCIpO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PT0gNDAxKSB7XHJcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcItCf0L7Qu9GM0LfQvtCy0LDRgtC10LvRjCDQvdC1INC90LDQudC00LXQvVwiKTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIGlmIChyZXNwb25zZS5zdGF0dXMgPT09IDUwMCkge1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCLQntGI0LjQsdC60LAg0L3QsCDRgdC10YDQstC10YDQtS5cIik7XHJcbiAgICAgICAgfTtcclxuICAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpO1xyXG4gICAgfSk7XHJcbn07XHJcblxyXG50eXBlIHJlZ2lzdGVyUHJvcHMgPSB7XHJcbiAgICB1c2VybmFtZTogc3RyaW5nXHJcbiAgICBlbWFpbDogc3RyaW5nO1xyXG4gICAgcGFzc3dvcmQ6IHN0cmluZztcclxufTtcclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHJlZ2lzdGVyKHsgdXNlcm5hbWUsIGVtYWlsLCBwYXNzd29yZCB9OiByZWdpc3RlclByb3BzKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goQVBJX1VSTF9VU0VSICsgU0lHTlVQLCB7XHJcbiAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcclxuICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XHJcbiAgICAgICAgICAgIGVtYWlsLFxyXG4gICAgICAgICAgICBwYXNzd29yZCxcclxuICAgICAgICAgICAgdXNlcm5hbWUsXHJcbiAgICAgICAgfSksXHJcbiAgICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgICAgICBcImNvbnRlbnQtdHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcclxuICAgICAgICB9LFxyXG4gICAgfSkudGhlbigocmVzcG9uc2UpID0+IHtcclxuICAgICAgICBpZiAocmVzcG9uc2Uuc3RhdHVzID09PSA0MDApIHtcclxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwi0J7RiNC40LHQutCwINC/0YDQuCDRgNC10LPQuNGB0YLRgNCw0YbQuNC4LlwiKTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7XHJcbiAgICB9KTtcclxufTtcclxuXHJcbnR5cGUgZ2V0VG9rZW5Qcm9wcyA9IHtcclxuICAgIGVtYWlsOiBzdHJpbmc7XHJcbiAgICBwYXNzd29yZDogc3RyaW5nO1xyXG59O1xyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0VG9rZW4oeyBlbWFpbCwgcGFzc3dvcmQgfTogZ2V0VG9rZW5Qcm9wcykge1xyXG4gICAgcmV0dXJuIGZldGNoKEFQSV9VUkxfVVNFUiArIFRPS0VOLCB7XHJcbiAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcclxuICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XHJcbiAgICAgICAgICAgIGVtYWlsLFxyXG4gICAgICAgICAgICBwYXNzd29yZCxcclxuICAgICAgICB9KSxcclxuICAgICAgICBoZWFkZXJzOiB7XHJcbiAgICAgICAgICAgIFwiY29udGVudC10eXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxyXG4gICAgICAgIH0sXHJcbiAgICB9KS50aGVuKChyZXNwb25zZSkgPT4ge1xyXG4gICAgICAgIGlmIChyZXNwb25zZS5zdGF0dXMgPT09IDQwMCkge1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCLQndC10LLQtdGA0L3Ri9C5INCw0LTRgNC10YEg0Y3Qu9C10LrRgtGA0L7QvdC90L7QuSDQv9C+0YfRgtGLINC40LvQuCDQv9Cw0YDQvtC70YwuXCIpO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PT0gNDAxKSB7XHJcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcItCf0L7Qu9GM0LfQvtCy0LDRgtC10LvRjCDQvdC1INC90LDQudC00LXQvVwiKTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIGlmIChyZXNwb25zZS5zdGF0dXMgPT09IDUwMCkge1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCLQntGI0LjQsdC60LAg0L3QsCDRgdC10YDQstC10YDQtS5cIik7XHJcbiAgICAgICAgfTtcclxuICAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpO1xyXG4gICAgfSk7XHJcbn07XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gcmVmcmVzaFRva2VuKHJlZnJlc2g6IHN0cmluZykge1xyXG4gICAgcmV0dXJuIGZldGNoKEFQSV9VUkxfVVNFUiArIFRPS0VOX1JFRlJFU0gsIHtcclxuICAgICAgICBtZXRob2Q6IFwiUE9TVFwiLFxyXG4gICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcclxuICAgICAgICAgICAgcmVmcmVzaDogcmVmcmVzaCxcclxuICAgICAgICB9KSxcclxuICAgICAgICBoZWFkZXJzOiB7XHJcbiAgICAgICAgICAgIFwiY29udGVudC10eXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxyXG4gICAgICAgIH0sXHJcbiAgICB9KS50aGVuKChyZXNwb25zZSkgPT4ge1xyXG4gICAgICAgIGlmIChyZXNwb25zZS5zdGF0dXMgPT09IDQwMCkge1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCLQntC00L3QsCDQvtGI0LjQsdC60LAg0Lgg0YLRiyDQvtGI0LjQsdGB0Y9cIik7XHJcbiAgICAgICAgfTtcclxuICAgICAgICBpZiAocmVzcG9uc2Uuc3RhdHVzID09PSA0MDEpIHtcclxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwi0J7RiNC40LHQutCwINC/0YDQuCDQv9C+0LvRg9GH0LXQvdC40Lgg0YLQvtC60LXQvdCwLlwiKTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIGlmIChyZXNwb25zZS5zdGF0dXMgPT09IDUwMCkge1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCLQntGI0LjQsdC60LAg0L3QsCDRgdC10YDQstC10YDQtS5cIik7XHJcbiAgICAgICAgfTtcclxuICAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpO1xyXG4gICAgfSk7XHJcbn07XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gYWRkVHJhY2tUb1BsYXlsaXN0KHRyYWNrSWQ6IG51bWJlcikge1xyXG4gICAgcmV0dXJuIGZldGNoKEFQSV9VUkwgKyBUUkFDSyArIGAke3RyYWNrSWR9L2AgKyBGQVZPUklURSwge1xyXG4gICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXHJcbiAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xyXG4gICAgICAgICAgICB0cmFja0lkLFxyXG4gICAgICAgIH0pLFxyXG4gICAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICAgICAgQXV0aG9yaXphdGlvbjogYEJlYXJlciAke2xvY2FsU3RvcmFnZS5nZXRJdGVtKFwidXNlclRva2VuXCIpfWAsXHJcbiAgICAgICAgfSxcclxuICAgIH0pLnRoZW4oKHJlc3BvbnNlKSA9PiB7XHJcbiAgICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PT0gNDAwKSB7XHJcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcItCe0YjQuNCx0LrQsCDQtNC+0LHQsNCy0LvQtdC90LjRjyDRgtGA0LXQutCwLlwiKTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIGlmIChyZXNwb25zZS5zdGF0dXMgPT09IDQwMSkge1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCLQntGI0LjQsdC60LAg0L/RgNC4INC/0L7Qu9GD0YfQtdC90LjQuCDRgtC+0LrQtdC90LAuXCIpO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTtcclxuICAgIH0pO1xyXG59O1xyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHJlbW92ZVRyYWNrRnJvbVBsYXlsaXN0KHRyYWNrSWQ6IG51bWJlcikge1xyXG4gICAgcmV0dXJuIGZldGNoKEFQSV9VUkwgKyBUUkFDSyArIGAke3RyYWNrSWR9L2AgKyBGQVZPUklURSwge1xyXG4gICAgICAgIG1ldGhvZDogXCJERUxFVEVcIixcclxuICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XHJcbiAgICAgICAgICAgIGlkOiB0cmFja0lkLFxyXG4gICAgICAgIH0pLFxyXG4gICAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICAgICAgXCJjb250ZW50LXR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXHJcbiAgICAgICAgICAgIEF1dGhvcml6YXRpb246IGBCZWFyZXIgJHtsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcInVzZXJUb2tlblwiKX1gLFxyXG4gICAgICAgIH0sXHJcbiAgICB9KS50aGVuKChyZXNwb25zZSkgPT4ge1xyXG4gICAgICAgIGlmIChyZXNwb25zZS5zdGF0dXMgPT09IDQwMCkge1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCLQntGI0LjQsdC60LAg0YPQtNCw0LvQtdC90LjRjyDRgtGA0LXQutCwLlwiKTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIGlmIChyZXNwb25zZS5zdGF0dXMgPT09IDQwMSkge1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCLQntGI0LjQsdC60LAg0L/RgNC4INC/0L7Qu9GD0YfQtdC90LjQuCDRgtC+0LrQtdC90LAuXCIpO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTtcclxuICAgIH0pO1xyXG59O1xyXG4vLyBjb25zdCBBUElfVVJMID0gXCJodHRwczovL3NreXByby1tdXNpYy1hcGkuc2t5ZW5nLnRlY2gvY2F0YWxvZy9cIjtcclxuLy8gY29uc3QgVFJBQ0sgPSBcInRyYWNrL1wiO1xyXG4vLyBjb25zdCBBTEwgPSBcImFsbC9cIjtcclxuLy8gY29uc3QgRkFWT1JJVEUgPSBcImZhdm9yaXRlL1wiO1xyXG4vLyBjb25zdCBTRUxFQ1RJT04gPSBcInNlbGVjdGlvbi9cIjtcclxuLy8gY29uc3QgQVBJX1VSTF9VU0VSID0gXCJodHRwczovL3NreXByby1tdXNpYy1hcGkuc2t5ZW5nLnRlY2gvdXNlci9cIjtcclxuLy8gY29uc3QgTE9HSU4gPSBcImxvZ2luL1wiO1xyXG4vLyBjb25zdCBTSUdOVVAgPSBcInNpZ251cC9cIjtcclxuLy8gY29uc3QgVE9LRU4gPSBcInRva2VuL1wiO1xyXG4vLyBjb25zdCBUT0tFTl9SRUZSRVNIID0gXCJ0b2tlbi9yZWZyZXNoL1wiO1xyXG5cclxuLy8gZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldFRyYWNrcyhwbGF5bGlzdElEOiBudW1iZXIgfCBudWxsKSB7XHJcbi8vICAgICB0cnkge1xyXG4vLyAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goQVBJX1VSTCArIChwbGF5bGlzdElEID8gKFNFTEVDVElPTiArIHBsYXlsaXN0SUQpIDogKFRSQUNLICsgQUxMKSkpO1xyXG4vLyAgICAgICAgIGlmICghcmVzcG9uc2Uub2spIHtcclxuLy8gICAgICAgICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PT0gNDAxKSB7XHJcbi8vICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCLQndC10YIg0LDQstGC0L7RgNC40LfQsNGG0LjQuFwiKTtcclxuLy8gICAgICAgICAgICAgfSBlbHNlIHtcclxuLy8gICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihg0J7RiNC40LHQutCwISDQodGC0LDRgtGD0YE6ICR7cmVzcG9uc2Uuc3RhdHVzfWApO1xyXG4vLyAgICAgICAgICAgICB9O1xyXG4vLyAgICAgICAgIH07XHJcbi8vICAgICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcclxuLy8gICAgICAgICByZXR1cm4gZGF0YTtcclxuLy8gICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbi8vICAgICAgICAgY29uc29sZS53YXJuKGVycm9yKTtcclxuLy8gICAgICAgICB0aHJvdyBlcnJvcjtcclxuLy8gICAgIH07XHJcbi8vIH07XHJcblxyXG4vLyBleHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0TGlrZWRUcmFja3ModXNlclRva2VuOiBzdHJpbmcpIHtcclxuLy8gICAgIHJldHVybiBmZXRjaChBUElfVVJMICsgVFJBQ0sgKyBGQVZPUklURSArIEFMTCwge1xyXG4vLyAgICAgICAgIG1ldGhvZDogXCJHRVRcIixcclxuLy8gICAgICAgICBoZWFkZXJzOiB7XHJcbi8vICAgICAgICAgICAgIEF1dGhvcml6YXRpb246IGBCZWFyZXIgJHt1c2VyVG9rZW59YCxcclxuLy8gICAgICAgICB9LFxyXG4vLyAgICAgfSkudGhlbigocmVzcG9uc2UpID0+IHtcclxuLy8gICAgICAgICBpZiAocmVzcG9uc2Uuc3RhdHVzID09PSA0MDApIHtcclxuLy8gICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwi0J3QtdCy0LXRgNC90YvQuSDQsNC00YDQtdGBINGN0LvQtdC60YLRgNC+0L3QvdC+0Lkg0L/QvtGH0YLRiyDQuNC70Lgg0L/QsNGA0L7Qu9GMLlwiKTtcclxuLy8gICAgICAgICB9O1xyXG4vLyAgICAgICAgIGlmIChyZXNwb25zZS5zdGF0dXMgPT09IDQwMSkge1xyXG4vLyAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCLQn9C+0LvRjNC30L7QstCw0YLQtdC70Ywg0L3QtSDQvdCw0LnQtNC10L0uXCIpO1xyXG4vLyAgICAgICAgIH07XHJcbi8vICAgICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PT0gNTAwKSB7XHJcbi8vICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcItCe0YjQuNCx0LrQsCDQvdCwINGB0LXRgNCy0LXRgNC1LlwiKTtcclxuLy8gICAgICAgICB9O1xyXG4vLyAgICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7XHJcbi8vICAgICB9KTtcclxuLy8gfTtcclxuXHJcbi8vIHR5cGUgbG9naW5Qcm9wcyA9IHtcclxuLy8gICAgIGVtYWlsOiBzdHJpbmc7XHJcbi8vICAgICBwYXNzd29yZDogc3RyaW5nO1xyXG4vLyB9O1xyXG5cclxuLy8gZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGxvZ2luKHsgZW1haWwsIHBhc3N3b3JkIH06IGxvZ2luUHJvcHMpIHtcclxuLy8gICAgIHJldHVybiBmZXRjaChBUElfVVJMX1VTRVIgKyBMT0dJTiwge1xyXG4vLyAgICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXHJcbi8vICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xyXG4vLyAgICAgICAgICAgICBlbWFpbCxcclxuLy8gICAgICAgICAgICAgcGFzc3dvcmQsXHJcbi8vICAgICAgICAgfSksXHJcbi8vICAgICAgICAgaGVhZGVyczoge1xyXG4vLyAgICAgICAgICAgICBcImNvbnRlbnQtdHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcclxuLy8gICAgICAgICB9LFxyXG4vLyAgICAgfSkudGhlbigocmVzcG9uc2UpID0+IHtcclxuLy8gICAgICAgICBpZiAocmVzcG9uc2Uuc3RhdHVzID09PSA0MDApIHtcclxuLy8gICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwi0J3QtdCy0LXRgNC90YvQuSDQsNC00YDQtdGBINGN0LvQtdC60YLRgNC+0L3QvdC+0Lkg0L/QvtGH0YLRiyDQuNC70Lgg0L/QsNGA0L7Qu9GMLlwiKTtcclxuLy8gICAgICAgICB9O1xyXG4vLyAgICAgICAgIGlmIChyZXNwb25zZS5zdGF0dXMgPT09IDQwMSkge1xyXG4vLyAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCLQn9C+0LvRjNC30L7QstCw0YLQtdC70Ywg0L3QtSDQvdCw0LnQtNC10L0uXCIpO1xyXG4vLyAgICAgICAgIH07XHJcbi8vICAgICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PT0gNTAwKSB7XHJcbi8vICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcItCe0YjQuNCx0LrQsCDQvdCwINGB0LXRgNCy0LXRgNC1LlwiKTtcclxuLy8gICAgICAgICB9O1xyXG4vLyAgICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7XHJcbi8vICAgICB9KTtcclxuLy8gfTtcclxuXHJcbi8vIHR5cGUgcmVnaXN0ZXJQcm9wcyA9IHtcclxuLy8gICAgIHVzZXJuYW1lOiBzdHJpbmdcclxuLy8gICAgIGVtYWlsOiBzdHJpbmc7XHJcbi8vICAgICBwYXNzd29yZDogc3RyaW5nO1xyXG4vLyB9O1xyXG5cclxuLy8gZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHJlZ2lzdGVyKHsgdXNlcm5hbWUsIGVtYWlsLCBwYXNzd29yZCB9OiByZWdpc3RlclByb3BzKSB7XHJcbi8vICAgICByZXR1cm4gZmV0Y2goQVBJX1VSTF9VU0VSICsgU0lHTlVQLCB7XHJcbi8vICAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcclxuLy8gICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XHJcbi8vICAgICAgICAgICAgIGVtYWlsLFxyXG4vLyAgICAgICAgICAgICBwYXNzd29yZCxcclxuLy8gICAgICAgICAgICAgdXNlcm5hbWUsXHJcbi8vICAgICAgICAgfSksXHJcbi8vICAgICAgICAgaGVhZGVyczoge1xyXG4vLyAgICAgICAgICAgICBcImNvbnRlbnQtdHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcclxuLy8gICAgICAgICB9LFxyXG4vLyAgICAgfSkudGhlbigocmVzcG9uc2UpID0+IHtcclxuLy8gICAgICAgICBpZiAocmVzcG9uc2Uuc3RhdHVzID09PSA0MDApIHtcclxuLy8gICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwi0J7RiNC40LHQutCwINC/0YDQuCDRgNC10LPQuNGB0YLRgNCw0YbQuNC4LlwiKTtcclxuLy8gICAgICAgICB9O1xyXG4vLyAgICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7XHJcbi8vICAgICB9KTtcclxuLy8gfTtcclxuXHJcbi8vIHR5cGUgZ2V0VG9rZW5Qcm9wcyA9IHtcclxuLy8gICAgIGVtYWlsOiBzdHJpbmc7XHJcbi8vICAgICBwYXNzd29yZDogc3RyaW5nO1xyXG4vLyB9O1xyXG5cclxuLy8gZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldFRva2VuKHsgZW1haWwsIHBhc3N3b3JkIH06IGdldFRva2VuUHJvcHMpIHtcclxuLy8gICAgIHJldHVybiBmZXRjaChBUElfVVJMX1VTRVIgKyBUT0tFTiwge1xyXG4vLyAgICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXHJcbi8vICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xyXG4vLyAgICAgICAgICAgICBlbWFpbCxcclxuLy8gICAgICAgICAgICAgcGFzc3dvcmQsXHJcbi8vICAgICAgICAgfSksXHJcbi8vICAgICAgICAgaGVhZGVyczoge1xyXG4vLyAgICAgICAgICAgICBcImNvbnRlbnQtdHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcclxuLy8gICAgICAgICB9LFxyXG4vLyAgICAgfSkudGhlbigocmVzcG9uc2UpID0+IHtcclxuLy8gICAgICAgICBpZiAocmVzcG9uc2Uuc3RhdHVzID09PSA0MDApIHtcclxuLy8gICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwi0J3QtdCy0LXRgNC90YvQuSDQsNC00YDQtdGBINGN0LvQtdC60YLRgNC+0L3QvdC+0Lkg0L/QvtGH0YLRiyDQuNC70Lgg0L/QsNGA0L7Qu9GMLlwiKTtcclxuLy8gICAgICAgICB9O1xyXG4vLyAgICAgICAgIGlmIChyZXNwb25zZS5zdGF0dXMgPT09IDQwMSkge1xyXG4vLyAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCLQn9C+0LvRjNC30L7QstCw0YLQtdC70Ywg0L3QtSDQvdCw0LnQtNC10L0uXCIpO1xyXG4vLyAgICAgICAgIH07XHJcbi8vICAgICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PT0gNTAwKSB7XHJcbi8vICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcItCe0YjQuNCx0LrQsCDQvdCwINGB0LXRgNCy0LXRgNC1LlwiKTtcclxuLy8gICAgICAgICB9O1xyXG4vLyAgICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7XHJcbi8vICAgICB9KTtcclxuLy8gfTtcclxuXHJcbi8vIGV4cG9ydCBhc3luYyBmdW5jdGlvbiByZWZyZXNoVG9rZW4ocmVmcmVzaDogc3RyaW5nKSB7XHJcbi8vICAgICByZXR1cm4gZmV0Y2goQVBJX1VSTF9VU0VSICsgVE9LRU4sIHtcclxuLy8gICAgICAgICBtZXRob2Q6IFwiUE9TVFwiLFxyXG4vLyAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcclxuLy8gICAgICAgICAgICAgcmVmcmVzaDogcmVmcmVzaCxcclxuLy8gICAgICAgICB9KSxcclxuLy8gICAgICAgICBoZWFkZXJzOiB7XHJcbi8vICAgICAgICAgICAgIFwiY29udGVudC10eXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxyXG4vLyAgICAgICAgIH0sXHJcbi8vICAgICB9KS50aGVuKChyZXNwb25zZSkgPT4ge1xyXG4vLyAgICAgICAgIGlmIChyZXNwb25zZS5zdGF0dXMgPT09IDQwMCkge1xyXG4vLyAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCLQntGI0LjQsdC60LAuXCIpO1xyXG4vLyAgICAgICAgIH07XHJcbi8vICAgICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PT0gNDAxKSB7XHJcbi8vICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcItCe0YjQuNCx0LrQsCDQv9GA0Lgg0L/QvtC70YPRh9C10L3QuNC4INGC0L7QutC10L3QsC5cIik7XHJcbi8vICAgICAgICAgfTtcclxuLy8gICAgICAgICBpZiAocmVzcG9uc2Uuc3RhdHVzID09PSA1MDApIHtcclxuLy8gICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwi0J7RiNC40LHQutCwINC90LAg0YHQtdGA0LLQtdGA0LUuXCIpO1xyXG4vLyAgICAgICAgIH07XHJcbi8vICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTtcclxuLy8gICAgIH0pO1xyXG4vLyB9O1xyXG5cclxuLy8gZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGFkZFRyYWNrVG9QbGF5bGlzdCh0cmFja0lkOiBudW1iZXIpIHtcclxuLy8gICAgIHJldHVybiBmZXRjaChBUElfVVJMICsgVFJBQ0sgKyBgJHt0cmFja0lkfS9gICsgRkFWT1JJVEUsIHtcclxuLy8gICAgICAgICBtZXRob2Q6IFwiUE9TVFwiLFxyXG4vLyAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcclxuLy8gICAgICAgICAgICAgdHJhY2tJZCxcclxuLy8gICAgICAgICB9KSxcclxuLy8gICAgICAgICBoZWFkZXJzOiB7XHJcbi8vICAgICAgICAgICAgIEF1dGhvcml6YXRpb246IGBCZWFyZXIgJHtsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcInVzZXJUb2tlblwiKX1gLFxyXG4vLyAgICAgICAgIH0sXHJcbi8vICAgICB9KS50aGVuKChyZXNwb25zZSkgPT4ge1xyXG4vLyAgICAgICAgIGlmIChyZXNwb25zZS5zdGF0dXMgPT09IDQwMCkge1xyXG4vLyAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCLQntGI0LjQsdC60LAg0LTQvtCx0LDQstC70LXQvdC40Y8g0YLRgNC10LrQsC5cIik7XHJcbi8vICAgICAgICAgfTtcclxuLy8gICAgICAgICBpZiAocmVzcG9uc2Uuc3RhdHVzID09PSA0MDEpIHtcclxuLy8gICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwi0J7RiNC40LHQutCwINC/0YDQuCDQv9C+0LvRg9GH0LXQvdC40Lgg0YLQvtC60LXQvdCwLlwiKTtcclxuLy8gICAgICAgICB9O1xyXG4vLyAgICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7XHJcbi8vICAgICB9KTtcclxuLy8gfTtcclxuXHJcbi8vIGV4cG9ydCBhc3luYyBmdW5jdGlvbiByZW1vdmVUcmFja0Zyb21QbGF5bGlzdCh0cmFja0lkOiBudW1iZXIpIHtcclxuLy8gICAgIHJldHVybiBmZXRjaChBUElfVVJMICsgVFJBQ0sgKyBgJHt0cmFja0lkfS9gICsgRkFWT1JJVEUsIHtcclxuLy8gICAgICAgICBtZXRob2Q6IFwiREVMRVRFXCIsXHJcbi8vICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xyXG4vLyAgICAgICAgICAgICBpZDogdHJhY2tJZCxcclxuLy8gICAgICAgICB9KSxcclxuLy8gICAgICAgICBoZWFkZXJzOiB7XHJcbi8vICAgICAgICAgICAgIFwiY29udGVudC10eXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxyXG4vLyAgICAgICAgICAgICBBdXRob3JpemF0aW9uOiBgQmVhcmVyICR7bG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJ1c2VyVG9rZW5cIil9YCxcclxuLy8gICAgICAgICB9LFxyXG4vLyAgICAgfSkudGhlbigocmVzcG9uc2UpID0+IHtcclxuLy8gICAgICAgICBpZiAocmVzcG9uc2Uuc3RhdHVzID09PSA0MDApIHtcclxuLy8gICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwi0J7RiNC40LHQutCwINGD0LTQsNC70LXQvdC40Y8g0YLRgNC10LrQsC5cIik7XHJcbi8vICAgICAgICAgfTtcclxuLy8gICAgICAgICBpZiAocmVzcG9uc2Uuc3RhdHVzID09PSA0MDEpIHtcclxuLy8gICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwi0J7RiNC40LHQutCwINC/0YDQuCDQv9C+0LvRg9GH0LXQvdC40Lgg0YLQvtC60LXQvdCwLlwiKTtcclxuLy8gICAgICAgICB9O1xyXG4vLyAgICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7XHJcbi8vICAgICB9KTtcclxuLy8gfTtcclxuIl0sIm5hbWVzIjpbIkFQSV9VUkwiLCJUUkFDSyIsIkFMTCIsIkZBVk9SSVRFIiwiU0VMRUNUSU9OIiwiQVBJX1VSTF9VU0VSIiwiTE9HSU4iLCJTSUdOVVAiLCJUT0tFTiIsIlRPS0VOX1JFRlJFU0giLCJnZXRUcmFja3MiLCJwbGF5bGlzdElEIiwicmVzcG9uc2UiLCJmZXRjaCIsIm9rIiwic3RhdHVzIiwiRXJyb3IiLCJkYXRhIiwianNvbiIsImVycm9yIiwiY29uc29sZSIsIndhcm4iLCJnZXRMaWtlZFRyYWNrcyIsInVzZXJUb2tlbiIsIm1ldGhvZCIsImhlYWRlcnMiLCJBdXRob3JpemF0aW9uIiwidGhlbiIsImxvZ2luIiwiZW1haWwiLCJwYXNzd29yZCIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwicmVnaXN0ZXIiLCJ1c2VybmFtZSIsImdldFRva2VuIiwicmVmcmVzaFRva2VuIiwicmVmcmVzaCIsImFkZFRyYWNrVG9QbGF5bGlzdCIsInRyYWNrSWQiLCJsb2NhbFN0b3JhZ2UiLCJnZXRJdGVtIiwicmVtb3ZlVHJhY2tGcm9tUGxheWxpc3QiLCJpZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/api/api.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/components/ContentPlaylist/ContentPlaylist.tsx":
/*!************************************************************!*\
  !*** ./src/components/ContentPlaylist/ContentPlaylist.tsx ***!
  \************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var _ContentPlaylist_module_css__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./ContentPlaylist.module.css */ \"(app-pages-browser)/./src/components/ContentPlaylist/ContentPlaylist.module.css\");\n/* harmony import */ var _ContentPlaylist_module_css__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_ContentPlaylist_module_css__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! classnames */ \"(app-pages-browser)/./node_modules/classnames/index.js\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _store_features_tracksSlice__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/store/features/tracksSlice */ \"(app-pages-browser)/./src/store/features/tracksSlice.ts\");\n/* harmony import */ var _components_PlayListItem__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @components/PlayListItem */ \"(app-pages-browser)/./src/components/PlayListItem/index.tsx\");\n/* harmony import */ var _lib_sortTracksByReleaseDate__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/lib/sortTracksByReleaseDate */ \"(app-pages-browser)/./src/lib/sortTracksByReleaseDate.ts\");\n/* harmony import */ var _store_features_authSlice__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/store/features/authSlice */ \"(app-pages-browser)/./src/store/features/authSlice.ts\");\n/* harmony import */ var _types_hooks__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @/types/hooks */ \"(app-pages-browser)/./src/types/hooks.ts\");\n/* harmony import */ var _api_api__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @/api/api */ \"(app-pages-browser)/./src/api/api.tsx\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\n\n\nconst ContentPlaylist = ()=>{\n    _s();\n    const dispatcher = (0,_types_hooks__WEBPACK_IMPORTED_MODULE_7__.useAppDispatch)();\n    const playList = (0,_types_hooks__WEBPACK_IMPORTED_MODULE_7__.useAppSelector)((state)=>state.tracks.playList);\n    const searchPlayList = (0,_types_hooks__WEBPACK_IMPORTED_MODULE_7__.useAppSelector)((state)=>state.tracks.searchPlaylist);\n    const { track } = (0,_types_hooks__WEBPACK_IMPORTED_MODULE_7__.useAppSelector)((state)=>state.tracks);\n    const userToken = localStorage.getItem(\"userToken\");\n    const isSearch = (0,_types_hooks__WEBPACK_IMPORTED_MODULE_7__.useAppSelector)((state)=>state.tracks.isSearch);\n    const activeFilters = (0,_types_hooks__WEBPACK_IMPORTED_MODULE_7__.useAppSelector)((state)=>state.tracks.activeFilters);\n    // get a new access token using the refresh token\n    const [tokenRefreshInterval, setTokenRefreshInterval] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n    const handleRefreshToken = async ()=>{\n        try {\n            const token = localStorage.getItem(\"refreshToken\");\n            if (!token) return;\n            const refreshedToken = await (0,_api_api__WEBPACK_IMPORTED_MODULE_8__.refreshToken)(token);\n            dispatcher((0,_store_features_authSlice__WEBPACK_IMPORTED_MODULE_6__.setAuthUserToken)(refreshedToken.access));\n        } catch (error) {\n            console.error(\"Error refreshing token:\", error);\n        }\n    };\n    // timer to refresh the token every 180 seconds\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        const interval = setInterval(()=>{\n            handleRefreshToken();\n        }, 180000);\n        setTokenRefreshInterval(interval);\n        return ()=>{\n            if (tokenRefreshInterval) clearInterval(tokenRefreshInterval);\n        };\n    }, []);\n    // check playlist number 1/2/3\n    const playlistID = (0,_types_hooks__WEBPACK_IMPORTED_MODULE_7__.useAppSelector)((state)=>state.tracks.playlistNumber);\n    // get the tracklist from API\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        if (userToken !== null) {\n            if (String(playlistID) === \"liked\") {\n                getLikedTracks(userToken).then((data)=>{\n                    dispatcher((0,_store_features_tracksSlice__WEBPACK_IMPORTED_MODULE_3__.setPlayList)(data));\n                });\n            } else {\n                getTracks(playlistID).then((data)=>{\n                    // check if the data is wrapped\n                    data.items ? dispatcher((0,_store_features_tracksSlice__WEBPACK_IMPORTED_MODULE_3__.setPlayList)(data.items)) : dispatcher((0,_store_features_tracksSlice__WEBPACK_IMPORTED_MODULE_3__.setPlayList)(data));\n                });\n            }\n        }\n    }, [\n        dispatcher,\n        playlistID\n    ]);\n    // Redux tools: set the track playing\n    const handleTrack = (trackR)=>{\n        dispatcher((0,_store_features_tracksSlice__WEBPACK_IMPORTED_MODULE_3__.setCurrentTrack)(trackR));\n    };\n    // add a duration from audio props to each track\n    const [trackDurations, setTrackDurations] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)({});\n    const audioRefs = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)({});\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        const durations = {};\n        playList === null || playList === void 0 ? void 0 : playList.forEach((track)=>{\n            const audio = new Audio(track.track_file);\n            audio.addEventListener(\"loadedmetadata\", ()=>{\n                durations[track.id] = audio.duration;\n                setTrackDurations({\n                    ...durations\n                });\n            });\n            audioRefs.current[track.id] = audio;\n        });\n        return ()=>{\n            Object.values(audioRefs.current).forEach((audio)=>{\n                audio.pause();\n                audio.removeAttribute(\"src\");\n                audio.load();\n            });\n        };\n    }, [\n        playList\n    ]);\n    // HOW IT WORKS\n    // First, check if the searchbar contains any value. If true, apply other filters to the search result.\n    // Second, check what artists and genres filters are applied.\n    // Third, memorize the result of applied search and filters. Here is the third check of sortTracksByReleaseDate.\n    // If true, apply sortTracksByReleaseDate to filteredTracks object. If false, simply return filteredTracks.\n    // determine which tracklist to render, default or search\n    const tracksToRender = isSearch ? searchPlayList : playList;\n    // filter tracks by artists and genres\n    const filterTracks = (tracks)=>{\n        return tracks.filter((track)=>{\n            const isAuthorsMatch = activeFilters.authors.length === 0 || activeFilters.authors.includes(track.author);\n            const isGenresMatch = activeFilters.genres.length === 0 || activeFilters.genres.includes(track.genre);\n            return isAuthorsMatch && isGenresMatch;\n        });\n    };\n    // useMemo to save the result of applied filters\n    const filteredAndSortedPlaylist = (0,react__WEBPACK_IMPORTED_MODULE_2__.useMemo)(()=>{\n        const filteredTracks = filterTracks(tracksToRender);\n        if (activeFilters.release_dates) {\n            return (0,_lib_sortTracksByReleaseDate__WEBPACK_IMPORTED_MODULE_5__.sortTracksByReleaseDate)(filteredTracks, activeFilters.release_dates);\n        } else {\n            return filteredTracks;\n        }\n    }, [\n        tracksToRender,\n        activeFilters\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: classnames__WEBPACK_IMPORTED_MODULE_1___default()((_ContentPlaylist_module_css__WEBPACK_IMPORTED_MODULE_9___default().contentPlaylist), (_ContentPlaylist_module_css__WEBPACK_IMPORTED_MODULE_9___default().playlist)),\n        children: isSearch && tracksToRender.length === 0 ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n            className: (_ContentPlaylist_module_css__WEBPACK_IMPORTED_MODULE_9___default().playlistTitleCol),\n            children: \"No tracks found\"\n        }, void 0, false, {\n            fileName: \"C:\\\\Users\\\\duffb\\\\OneDrive\\\\Рабочий стол\\\\new_music\\\\music\\\\src\\\\components\\\\ContentPlaylist\\\\ContentPlaylist.tsx\",\n            lineNumber: 122,\n            columnNumber: 9\n        }, undefined) : filteredAndSortedPlaylist.map((trackR)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_PlayListItem__WEBPACK_IMPORTED_MODULE_4__.PlayListItem, {\n                id: trackR.id,\n                name: trackR.name,\n                author: trackR.author,\n                album: trackR.album,\n                duration: trackDurations[trackR.id],\n                setTrack: ()=>handleTrack(trackR),\n                isSetTrack: trackR.id === (track === null || track === void 0 ? void 0 : track.id),\n                stared_user: trackR.stared_user,\n                // @ts-ignore\n                playlistID: playlistID\n            }, trackR.id, false, {\n                fileName: \"C:\\\\Users\\\\duffb\\\\OneDrive\\\\Рабочий стол\\\\new_music\\\\music\\\\src\\\\components\\\\ContentPlaylist\\\\ContentPlaylist.tsx\",\n                lineNumber: 125,\n                columnNumber: 11\n            }, undefined))\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\duffb\\\\OneDrive\\\\Рабочий стол\\\\new_music\\\\music\\\\src\\\\components\\\\ContentPlaylist\\\\ContentPlaylist.tsx\",\n        lineNumber: 120,\n        columnNumber: 5\n    }, undefined);\n};\n_s(ContentPlaylist, \"fe7HF2i0C4pWsrnuDQdIhTWhSpg=\", false, function() {\n    return [\n        _types_hooks__WEBPACK_IMPORTED_MODULE_7__.useAppDispatch,\n        _types_hooks__WEBPACK_IMPORTED_MODULE_7__.useAppSelector,\n        _types_hooks__WEBPACK_IMPORTED_MODULE_7__.useAppSelector,\n        _types_hooks__WEBPACK_IMPORTED_MODULE_7__.useAppSelector,\n        _types_hooks__WEBPACK_IMPORTED_MODULE_7__.useAppSelector,\n        _types_hooks__WEBPACK_IMPORTED_MODULE_7__.useAppSelector,\n        _types_hooks__WEBPACK_IMPORTED_MODULE_7__.useAppSelector\n    ];\n});\n_c = ContentPlaylist;\n/* harmony default export */ __webpack_exports__[\"default\"] = (ContentPlaylist); // \"use client\"\n // import styles from \"./ContentPlaylist.module.css\";\n // import classNames from \"classnames\";\n // import React, { useEffect, useMemo, useRef, useState } from 'react';\n // import { trackType } from '@/types/types';\n // import { setCurrentTrack, setPlayList } from '@/store/features/tracksSlice';\n // import { PlayListItem } from '@components/PlayListItem';\n // import { useAppDispatch, useAppSelector } from \"@/types/hooks\";\n // import { getTracks } from \"@/api/api\";\n // import { sortTracksByReleaseDate } from \"@/lib/sortTracksByReleaseDate\";\n // const ContentPlaylist = () => {\n //   const dispatcher = useAppDispatch();\n //   const playList = useAppSelector((state) => state.tracks.playList);\n //   const searchPlayList = useAppSelector((state) => state.tracks.searchPlaylist);\n //   const { track } = useAppSelector((state) => state.tracks);\n //   const isSearch = useAppSelector((state) => state.tracks.isSearch);\n //   const activeFilters = useAppSelector((state) => state.tracks.activeFilters);\n //   const playlistNumber = useAppSelector((state) => state.tracks.playlistNumber);\n //   useEffect(() => {\n //     getTracks(playlistNumber).then((data) => {\n //       data.items ? dispatcher(setPlayList(data.items)) : dispatcher(setPlayList(data));\n //     });\n //   }, [dispatcher, playlistNumber]);\n //   const handleTrack = (trackR: trackType) => {\n //     dispatcher(setCurrentTrack(trackR));\n //   };\n //   const [trackDurations, setTrackDurations] = useState<{ [key: string]: number }>({});\n //   const audioRefs = useRef<{ [key: string]: HTMLAudioElement }>({});\n //   useEffect(() => {\n //     const durations: { [key: string]: number } = {};\n //     playList?.forEach((track: trackType) => {\n //       const audio = new Audio(track.track_file);\n //       audio.addEventListener('loadedmetadata', () => {\n //         durations[track.id] = audio.duration;\n //         setTrackDurations({ ...durations });\n //       });\n //       audioRefs.current[track.id] = audio;\n //     });\n //     return () => {\n //       Object.values(audioRefs.current).forEach((audio) => {\n //         audio.pause();\n //         audio.removeAttribute('src');\n //         audio.load();\n //       });\n //     };\n //   }, [playList]);\n //   const tracksToRender = isSearch ? searchPlayList : playList;\n //   const filterTracks = (tracks: trackType[]) => {\n //     return tracks.filter((track) => {\n //       const isAuthorsMatch = activeFilters.authors.length === 0 || activeFilters.authors.includes(track.author);\n //       const isGenresMatch = activeFilters.genres.length === 0 || activeFilters.genres.includes(track.genre);\n //       return isAuthorsMatch && isGenresMatch;\n //     });\n //   };\n //   const filteredAndSortedPlaylist = useMemo(() => {\n //     const filteredTracks = filterTracks(tracksToRender);\n //     if (activeFilters.release_dates) {\n //       return sortTracksByReleaseDate(filteredTracks, activeFilters.release_dates);\n //     } else {\n //       return filteredTracks;\n //     }\n //   }, [tracksToRender, activeFilters]);\n //   return (\n //     <div className={classNames(styles.contentPlaylist, styles.playlist)}>\n //       {isSearch && tracksToRender.length === 0 ? (\n //         <p className={styles.playlistTitleCol}>No tracks found</p>\n //       ) : (\n //         filteredAndSortedPlaylist.map((trackR: trackType) => (\n //           <PlayListItem\n //             key={trackR.id}\n //             name={trackR.name}\n //             author={trackR.author}\n //             album={trackR.album}\n //             duration={trackDurations[trackR.id]}\n //             setTrack={() => handleTrack(trackR)}\n //             isSetTrack={trackR.id === track?.id}\n //           />\n //         ))\n //       )}\n //     </div>\n //   );\n // };\n // export default ContentPlaylist;\nvar _c;\n$RefreshReg$(_c, \"ContentPlaylist\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb21wb25lbnRzL0NvbnRlbnRQbGF5bGlzdC9Db250ZW50UGxheWxpc3QudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFa0Q7QUFDZDtBQUNnQztBQUVRO0FBQ3BCO0FBQ2dCO0FBQ1Y7QUFDQztBQUN0QjtBQUV6QyxNQUFNZSxrQkFBa0I7O0lBRXRCLE1BQU1DLGFBQWFKLDREQUFjQTtJQUNqQyxNQUFNSyxXQUFXSiw0REFBY0EsQ0FBQyxDQUFDSyxRQUFVQSxNQUFNQyxNQUFNLENBQUNGLFFBQVE7SUFDaEUsTUFBTUcsaUJBQWlCUCw0REFBY0EsQ0FBQyxDQUFDSyxRQUFVQSxNQUFNQyxNQUFNLENBQUNFLGNBQWM7SUFDNUUsTUFBTSxFQUFFQyxLQUFLLEVBQUUsR0FBR1QsNERBQWNBLENBQUMsQ0FBQ0ssUUFBVUEsTUFBTUMsTUFBTTtJQUN4RCxNQUFNSSxZQUFZQyxhQUFhQyxPQUFPLENBQUM7SUFDdkMsTUFBTUMsV0FBV2IsNERBQWNBLENBQUMsQ0FBQ0ssUUFBVUEsTUFBTUMsTUFBTSxDQUFDTyxRQUFRO0lBQ2hFLE1BQU1DLGdCQUFnQmQsNERBQWNBLENBQUMsQ0FBQ0ssUUFBVUEsTUFBTUMsTUFBTSxDQUFDUSxhQUFhO0lBRTFFLGlEQUFpRDtJQUNqRCxNQUFNLENBQUNDLHNCQUFzQkMsd0JBQXdCLEdBQUd2QiwrQ0FBUUEsQ0FBd0I7SUFDeEYsTUFBTXdCLHFCQUFxQjtRQUN6QixJQUFJO1lBQ0YsTUFBTUMsUUFBUVAsYUFBYUMsT0FBTyxDQUFDO1lBQ25DLElBQUksQ0FBQ00sT0FBTztZQUNaLE1BQU1DLGlCQUFpQixNQUFNbEIsc0RBQVlBLENBQUNpQjtZQUMxQ2YsV0FBV0wsMkVBQWdCQSxDQUFDcUIsZUFBZUMsTUFBTTtRQUNuRCxFQUFFLE9BQU9DLE9BQU87WUFDZEMsUUFBUUQsS0FBSyxDQUFDLDJCQUEyQkE7UUFDM0M7SUFDRjtJQUNBLCtDQUErQztJQUMvQy9CLGdEQUFTQSxD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QUVuRixzQkFBc0I7Q0FDdEIsaURBQWlEO0NBRWpELDBGQUEwRjtDQUMxRixVQUFVO0NBQ1Ysc0NBQXNDO0NBRXRDLGlEQUFpRDtDQUNqRCwyQ0FBMkM7Q0FDM0MsT0FBTztDQUVQLHlGQUF5RjtDQUN6Rix1RUFBdUU7Q0FDdkUsc0JBQXNCO0NBQ3RCLHVEQUF1RDtDQUN2RCxnREFBZ0Q7Q0FDaEQsbURBQW1EO0NBQ25ELHlEQUF5RDtDQUN6RCxnREFBZ0Q7Q0FDaEQsK0NBQStDO0NBQy9DLFlBQVk7Q0FDWiw2Q0FBNkM7Q0FDN0MsVUFBVTtDQUNWLHFCQUFxQjtDQUNyQiw4REFBOEQ7Q0FDOUQseUJBQXlCO0NBQ3pCLHdDQUF3QztDQUN4Qyx3QkFBd0I7Q0FDeEIsWUFBWTtDQUNaLFNBQVM7Q0FDVCxvQkFBb0I7Q0FFcEIsaUVBQWlFO0NBR2pFLG9EQUFvRDtDQUNwRCx3Q0FBd0M7Q0FDeEMsbUhBQW1IO0NBQ25ILCtHQUErRztDQUMvRyxnREFBZ0Q7Q0FDaEQsVUFBVTtDQUNWLE9BQU87Q0FFUCxzREFBc0Q7Q0FDdEQsMkRBQTJEO0NBRTNELHlDQUF5QztDQUN6QyxxRkFBcUY7Q0FDckYsZUFBZTtDQUNmLCtCQUErQjtDQUMvQixRQUFRO0NBQ1IseUNBQXlDO0NBRXpDLGFBQWE7Q0FDYiw0RUFBNEU7Q0FDNUUscURBQXFEO0NBQ3JELHFFQUFxRTtDQUNyRSxjQUFjO0NBQ2QsaUVBQWlFO0NBQ2pFLDBCQUEwQjtDQUMxQiw4QkFBOEI7Q0FDOUIsaUNBQWlDO0NBQ2pDLHFDQUFxQztDQUNyQyxtQ0FBbUM7Q0FDbkMsbURBQW1EO0NBQ25ELG1EQUFtRDtDQUNuRCxtREFBbUQ7Q0FDbkQsZUFBZTtDQUNmLGFBQWE7Q0FDYixXQUFXO0NBQ1gsYUFBYTtDQUNiLE9BQU87Q0FDUCxLQUFLO0NBRUwsa0NBQWtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9jb21wb25lbnRzL0NvbnRlbnRQbGF5bGlzdC9Db250ZW50UGxheWxpc3QudHN4PzNjZmMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2UgY2xpZW50XCJcclxuXHJcbmltcG9ydCBzdHlsZXMgZnJvbSBcIi4vQ29udGVudFBsYXlsaXN0Lm1vZHVsZS5jc3NcIjtcclxuaW1wb3J0IGNsYXNzTmFtZXMgZnJvbSBcImNsYXNzbmFtZXNcIjtcclxuaW1wb3J0IFJlYWN0LCB7IHVzZUVmZmVjdCwgdXNlTWVtbywgdXNlUmVmLCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHsgdHJhY2tUeXBlIH0gZnJvbSAnQC90eXBlcy90eXBlcyc7XHJcbmltcG9ydCB7IHNldEN1cnJlbnRUcmFjaywgc2V0UGxheUxpc3QgfSBmcm9tICdAL3N0b3JlL2ZlYXR1cmVzL3RyYWNrc1NsaWNlJztcclxuaW1wb3J0IHsgUGxheUxpc3RJdGVtIH0gZnJvbSAnQGNvbXBvbmVudHMvUGxheUxpc3RJdGVtJztcclxuaW1wb3J0IHsgc29ydFRyYWNrc0J5UmVsZWFzZURhdGUgfSBmcm9tIFwiQC9saWIvc29ydFRyYWNrc0J5UmVsZWFzZURhdGVcIjtcclxuaW1wb3J0IHsgc2V0QXV0aFVzZXJUb2tlbiB9IGZyb20gXCJAL3N0b3JlL2ZlYXR1cmVzL2F1dGhTbGljZVwiO1xyXG5pbXBvcnQgeyB1c2VBcHBEaXNwYXRjaCwgdXNlQXBwU2VsZWN0b3IgfSBmcm9tIFwiQC90eXBlcy9ob29rc1wiO1xyXG5pbXBvcnQgeyByZWZyZXNoVG9rZW4gfSBmcm9tIFwiQC9hcGkvYXBpXCI7XHJcblxyXG5jb25zdCBDb250ZW50UGxheWxpc3QgPSAoKSA9PiB7XHJcblxyXG4gIGNvbnN0IGRpc3BhdGNoZXIgPSB1c2VBcHBEaXNwYXRjaCgpO1xyXG4gIGNvbnN0IHBsYXlMaXN0ID0gdXNlQXBwU2VsZWN0b3IoKHN0YXRlKSA9PiBzdGF0ZS50cmFja3MucGxheUxpc3QpO1xyXG4gIGNvbnN0IHNlYXJjaFBsYXlMaXN0ID0gdXNlQXBwU2VsZWN0b3IoKHN0YXRlKSA9PiBzdGF0ZS50cmFja3Muc2VhcmNoUGxheWxpc3QpO1xyXG4gIGNvbnN0IHsgdHJhY2sgfSA9IHVzZUFwcFNlbGVjdG9yKChzdGF0ZSkgPT4gc3RhdGUudHJhY2tzKTtcclxuICBjb25zdCB1c2VyVG9rZW4gPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgndXNlclRva2VuJyk7XHJcbiAgY29uc3QgaXNTZWFyY2ggPSB1c2VBcHBTZWxlY3Rvcigoc3RhdGUpID0+IHN0YXRlLnRyYWNrcy5pc1NlYXJjaCk7XHJcbiAgY29uc3QgYWN0aXZlRmlsdGVycyA9IHVzZUFwcFNlbGVjdG9yKChzdGF0ZSkgPT4gc3RhdGUudHJhY2tzLmFjdGl2ZUZpbHRlcnMpO1xyXG5cclxuICAvLyBnZXQgYSBuZXcgYWNjZXNzIHRva2VuIHVzaW5nIHRoZSByZWZyZXNoIHRva2VuXHJcbiAgY29uc3QgW3Rva2VuUmVmcmVzaEludGVydmFsLCBzZXRUb2tlblJlZnJlc2hJbnRlcnZhbF0gPSB1c2VTdGF0ZTxOb2RlSlMuVGltZW91dCB8IG51bGw+KG51bGwpO1xyXG4gIGNvbnN0IGhhbmRsZVJlZnJlc2hUb2tlbiA9IGFzeW5jICgpID0+IHtcclxuICAgIHRyeSB7XHJcbiAgICAgIGNvbnN0IHRva2VuID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3JlZnJlc2hUb2tlbicpO1xyXG4gICAgICBpZiAoIXRva2VuKSByZXR1cm47XHJcbiAgICAgIGNvbnN0IHJlZnJlc2hlZFRva2VuID0gYXdhaXQgcmVmcmVzaFRva2VuKHRva2VuKTtcclxuICAgICAgZGlzcGF0Y2hlcihzZXRBdXRoVXNlclRva2VuKHJlZnJlc2hlZFRva2VuLmFjY2VzcykpO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgcmVmcmVzaGluZyB0b2tlbjonLCBlcnJvcik7XHJcbiAgICB9XHJcbiAgfTtcclxuICAvLyB0aW1lciB0byByZWZyZXNoIHRoZSB0b2tlbiBldmVyeSAxODAgc2Vjb25kc1xyXG4gIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICBjb25zdCBpbnRlcnZhbCA9IHNldEludGVydmFsKCgpID0+IHtcclxuICAgICAgaGFuZGxlUmVmcmVzaFRva2VuKCk7XHJcbiAgICB9LCAxODAwMDApO1xyXG4gICAgc2V0VG9rZW5SZWZyZXNoSW50ZXJ2YWwoaW50ZXJ2YWwpO1xyXG4gICAgcmV0dXJuICgpID0+IHtcclxuICAgICAgaWYgKHRva2VuUmVmcmVzaEludGVydmFsKSBjbGVhckludGVydmFsKHRva2VuUmVmcmVzaEludGVydmFsKTtcclxuICAgIH07XHJcbiAgfSwgW10pO1xyXG5cclxuICAvLyBjaGVjayBwbGF5bGlzdCBudW1iZXIgMS8yLzNcclxuICBjb25zdCBwbGF5bGlzdElEID0gdXNlQXBwU2VsZWN0b3IoKHN0YXRlKSA9PiBzdGF0ZS50cmFja3MucGxheWxpc3ROdW1iZXIpO1xyXG4gIC8vIGdldCB0aGUgdHJhY2tsaXN0IGZyb20gQVBJXHJcbiAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgIGlmICh1c2VyVG9rZW4gIT09IG51bGwpIHtcclxuICAgICAgaWYgKFN0cmluZyhwbGF5bGlzdElEKSA9PT0gXCJsaWtlZFwiKSB7XHJcbiAgICAgICAgZ2V0TGlrZWRUcmFja3ModXNlclRva2VuKS50aGVuKChkYXRhKSA9PiB7XHJcbiAgICAgICAgICBkaXNwYXRjaGVyKHNldFBsYXlMaXN0KGRhdGEpKTtcclxuICAgICAgICB9KTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBnZXRUcmFja3MocGxheWxpc3RJRCkudGhlbigoZGF0YSkgPT4ge1xyXG4gICAgICAgICAgLy8gY2hlY2sgaWYgdGhlIGRhdGEgaXMgd3JhcHBlZFxyXG4gICAgICAgICAgZGF0YS5pdGVtcyA/IGRpc3BhdGNoZXIoc2V0UGxheUxpc3QoZGF0YS5pdGVtcykpIDogZGlzcGF0Y2hlcihzZXRQbGF5TGlzdChkYXRhKSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH07XHJcbiAgICB9O1xyXG4gIH0sIFtkaXNwYXRjaGVyLCBwbGF5bGlzdElEXSk7XHJcbiAgLy8gUmVkdXggdG9vbHM6IHNldCB0aGUgdHJhY2sgcGxheWluZ1xyXG4gIGNvbnN0IGhhbmRsZVRyYWNrID0gKHRyYWNrUjogdHJhY2tUeXBlKSA9PiB7XHJcbiAgICBkaXNwYXRjaGVyKHNldEN1cnJlbnRUcmFjayh0cmFja1IpKTtcclxuICB9O1xyXG4gIC8vIGFkZCBhIGR1cmF0aW9uIGZyb20gYXVkaW8gcHJvcHMgdG8gZWFjaCB0cmFja1xyXG4gIGNvbnN0IFt0cmFja0R1cmF0aW9ucywgc2V0VHJhY2tEdXJhdGlvbnNdID0gdXNlU3RhdGU8eyBba2V5OiBzdHJpbmddOiBudW1iZXIgfT4oe30pO1xyXG4gIGNvbnN0IGF1ZGlvUmVmcyA9IHVzZVJlZjx7IFtrZXk6IHN0cmluZ106IEhUTUxBdWRpb0VsZW1lbnQgfT4oe30pO1xyXG4gIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICBjb25zdCBkdXJhdGlvbnM6IHsgW2tleTogc3RyaW5nXTogbnVtYmVyIH0gPSB7fTtcclxuICAgIHBsYXlMaXN0Py5mb3JFYWNoKCh0cmFjazogdHJhY2tUeXBlKSA9PiB7XHJcbiAgICAgIGNvbnN0IGF1ZGlvID0gbmV3IEF1ZGlvKHRyYWNrLnRyYWNrX2ZpbGUpO1xyXG4gICAgICBhdWRpby5hZGRFdmVudExpc3RlbmVyKCdsb2FkZWRtZXRhZGF0YScsICgpID0+IHtcclxuICAgICAgICBkdXJhdGlvbnNbdHJhY2suaWRdID0gYXVkaW8uZHVyYXRpb247XHJcbiAgICAgICAgc2V0VHJhY2tEdXJhdGlvbnMoeyAuLi5kdXJhdGlvbnMgfSk7XHJcbiAgICAgIH0pO1xyXG4gICAgICBhdWRpb1JlZnMuY3VycmVudFt0cmFjay5pZF0gPSBhdWRpbztcclxuICAgIH0pO1xyXG4gICAgcmV0dXJuICgpID0+IHtcclxuICAgICAgT2JqZWN0LnZhbHVlcyhhdWRpb1JlZnMuY3VycmVudCkuZm9yRWFjaCgoYXVkaW8pID0+IHtcclxuICAgICAgICBhdWRpby5wYXVzZSgpO1xyXG4gICAgICAgIGF1ZGlvLnJlbW92ZUF0dHJpYnV0ZSgnc3JjJyk7XHJcbiAgICAgICAgYXVkaW8ubG9hZCgpO1xyXG4gICAgICB9KTtcclxuICAgIH07XHJcbiAgfSwgW3BsYXlMaXN0XSk7XHJcblxyXG4gIC8vIEhPVyBJVCBXT1JLU1xyXG4gIC8vIEZpcnN0LCBjaGVjayBpZiB0aGUgc2VhcmNoYmFyIGNvbnRhaW5zIGFueSB2YWx1ZS4gSWYgdHJ1ZSwgYXBwbHkgb3RoZXIgZmlsdGVycyB0byB0aGUgc2VhcmNoIHJlc3VsdC5cclxuICAvLyBTZWNvbmQsIGNoZWNrIHdoYXQgYXJ0aXN0cyBhbmQgZ2VucmVzIGZpbHRlcnMgYXJlIGFwcGxpZWQuXHJcbiAgLy8gVGhpcmQsIG1lbW9yaXplIHRoZSByZXN1bHQgb2YgYXBwbGllZCBzZWFyY2ggYW5kIGZpbHRlcnMuIEhlcmUgaXMgdGhlIHRoaXJkIGNoZWNrIG9mIHNvcnRUcmFja3NCeVJlbGVhc2VEYXRlLlxyXG4gIC8vIElmIHRydWUsIGFwcGx5IHNvcnRUcmFja3NCeVJlbGVhc2VEYXRlIHRvIGZpbHRlcmVkVHJhY2tzIG9iamVjdC4gSWYgZmFsc2UsIHNpbXBseSByZXR1cm4gZmlsdGVyZWRUcmFja3MuXHJcblxyXG4gIC8vIGRldGVybWluZSB3aGljaCB0cmFja2xpc3QgdG8gcmVuZGVyLCBkZWZhdWx0IG9yIHNlYXJjaFxyXG4gIGNvbnN0IHRyYWNrc1RvUmVuZGVyID0gaXNTZWFyY2ggPyBzZWFyY2hQbGF5TGlzdCA6IHBsYXlMaXN0O1xyXG5cclxuICAvLyBmaWx0ZXIgdHJhY2tzIGJ5IGFydGlzdHMgYW5kIGdlbnJlc1xyXG4gIGNvbnN0IGZpbHRlclRyYWNrcyA9ICh0cmFja3M6IHRyYWNrVHlwZVtdKSA9PiB7XHJcbiAgICByZXR1cm4gdHJhY2tzLmZpbHRlcigodHJhY2spID0+IHtcclxuICAgICAgY29uc3QgaXNBdXRob3JzTWF0Y2ggPSBhY3RpdmVGaWx0ZXJzLmF1dGhvcnMubGVuZ3RoID09PSAwIHx8IGFjdGl2ZUZpbHRlcnMuYXV0aG9ycy5pbmNsdWRlcyh0cmFjay5hdXRob3IpO1xyXG4gICAgICBjb25zdCBpc0dlbnJlc01hdGNoID0gYWN0aXZlRmlsdGVycy5nZW5yZXMubGVuZ3RoID09PSAwIHx8IGFjdGl2ZUZpbHRlcnMuZ2VucmVzLmluY2x1ZGVzKHRyYWNrLmdlbnJlKTtcclxuICAgICAgcmV0dXJuIGlzQXV0aG9yc01hdGNoICYmIGlzR2VucmVzTWF0Y2g7XHJcbiAgICB9KTtcclxuICB9O1xyXG5cclxuICAvLyB1c2VNZW1vIHRvIHNhdmUgdGhlIHJlc3VsdCBvZiBhcHBsaWVkIGZpbHRlcnNcclxuICBjb25zdCBmaWx0ZXJlZEFuZFNvcnRlZFBsYXlsaXN0ID0gdXNlTWVtbygoKSA9PiB7XHJcbiAgICBjb25zdCBmaWx0ZXJlZFRyYWNrcyA9IGZpbHRlclRyYWNrcyh0cmFja3NUb1JlbmRlcik7XHJcblxyXG4gICAgaWYgKGFjdGl2ZUZpbHRlcnMucmVsZWFzZV9kYXRlcykge1xyXG4gICAgICByZXR1cm4gc29ydFRyYWNrc0J5UmVsZWFzZURhdGUoZmlsdGVyZWRUcmFja3MsIGFjdGl2ZUZpbHRlcnMucmVsZWFzZV9kYXRlcyk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICByZXR1cm4gZmlsdGVyZWRUcmFja3M7XHJcbiAgICB9XHJcbiAgfSwgW3RyYWNrc1RvUmVuZGVyLCBhY3RpdmVGaWx0ZXJzXSk7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8ZGl2IGNsYXNzTmFtZT17Y2xhc3NOYW1lcyhzdHlsZXMuY29udGVudFBsYXlsaXN0LCBzdHlsZXMucGxheWxpc3QpfT5cclxuICAgICAge2lzU2VhcmNoICYmIHRyYWNrc1RvUmVuZGVyLmxlbmd0aCA9PT0gMCA/IChcclxuICAgICAgICA8cCBjbGFzc05hbWU9e3N0eWxlcy5wbGF5bGlzdFRpdGxlQ29sfT5ObyB0cmFja3MgZm91bmQ8L3A+XHJcbiAgICAgICkgOiAoXHJcbiAgICAgICAgZmlsdGVyZWRBbmRTb3J0ZWRQbGF5bGlzdC5tYXAoKHRyYWNrUjogdHJhY2tUeXBlKSA9PiAoXHJcbiAgICAgICAgICA8UGxheUxpc3RJdGVtXHJcbiAgICAgICAgICAgIGtleT17dHJhY2tSLmlkfVxyXG4gICAgICAgICAgICBpZD17dHJhY2tSLmlkfVxyXG4gICAgICAgICAgICBuYW1lPXt0cmFja1IubmFtZX1cclxuICAgICAgICAgICAgYXV0aG9yPXt0cmFja1IuYXV0aG9yfVxyXG4gICAgICAgICAgICBhbGJ1bT17dHJhY2tSLmFsYnVtfVxyXG4gICAgICAgICAgICBkdXJhdGlvbj17dHJhY2tEdXJhdGlvbnNbdHJhY2tSLmlkXX1cclxuICAgICAgICAgICAgc2V0VHJhY2s9eygpID0+IGhhbmRsZVRyYWNrKHRyYWNrUil9XHJcbiAgICAgICAgICAgIGlzU2V0VHJhY2s9e3RyYWNrUi5pZCA9PT0gdHJhY2s/LmlkfVxyXG4gICAgICAgICAgICBzdGFyZWRfdXNlcj17dHJhY2tSLnN0YXJlZF91c2VyfVxyXG4gICAgICAgICAgICAvLyBAdHMtaWdub3JlXHJcbiAgICAgICAgICAgIHBsYXlsaXN0SUQ9e3BsYXlsaXN0SUR9XHJcbiAgICAgICAgICAvPlxyXG4gICAgICAgICkpXHJcbiAgICAgICl9XHJcbiAgICA8L2Rpdj5cclxuICApO1xyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgQ29udGVudFBsYXlsaXN0O1xyXG5cclxuLy8gXCJ1c2UgY2xpZW50XCJcclxuXHJcbi8vIGltcG9ydCBzdHlsZXMgZnJvbSBcIi4vQ29udGVudFBsYXlsaXN0Lm1vZHVsZS5jc3NcIjtcclxuLy8gaW1wb3J0IGNsYXNzTmFtZXMgZnJvbSBcImNsYXNzbmFtZXNcIjtcclxuLy8gaW1wb3J0IFJlYWN0LCB7IHVzZUVmZmVjdCwgdXNlTWVtbywgdXNlUmVmLCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcclxuLy8gaW1wb3J0IHsgdHJhY2tUeXBlIH0gZnJvbSAnQC90eXBlcy90eXBlcyc7XHJcbi8vIGltcG9ydCB7IHNldEN1cnJlbnRUcmFjaywgc2V0UGxheUxpc3QgfSBmcm9tICdAL3N0b3JlL2ZlYXR1cmVzL3RyYWNrc1NsaWNlJztcclxuLy8gaW1wb3J0IHsgUGxheUxpc3RJdGVtIH0gZnJvbSAnQGNvbXBvbmVudHMvUGxheUxpc3RJdGVtJztcclxuLy8gaW1wb3J0IHsgdXNlQXBwRGlzcGF0Y2gsIHVzZUFwcFNlbGVjdG9yIH0gZnJvbSBcIkAvdHlwZXMvaG9va3NcIjtcclxuLy8gaW1wb3J0IHsgZ2V0VHJhY2tzIH0gZnJvbSBcIkAvYXBpL2FwaVwiO1xyXG4vLyBpbXBvcnQgeyBzb3J0VHJhY2tzQnlSZWxlYXNlRGF0ZSB9IGZyb20gXCJAL2xpYi9zb3J0VHJhY2tzQnlSZWxlYXNlRGF0ZVwiO1xyXG5cclxuLy8gY29uc3QgQ29udGVudFBsYXlsaXN0ID0gKCkgPT4ge1xyXG5cclxuLy8gICBjb25zdCBkaXNwYXRjaGVyID0gdXNlQXBwRGlzcGF0Y2goKTtcclxuLy8gICBjb25zdCBwbGF5TGlzdCA9IHVzZUFwcFNlbGVjdG9yKChzdGF0ZSkgPT4gc3RhdGUudHJhY2tzLnBsYXlMaXN0KTtcclxuLy8gICBjb25zdCBzZWFyY2hQbGF5TGlzdCA9IHVzZUFwcFNlbGVjdG9yKChzdGF0ZSkgPT4gc3RhdGUudHJhY2tzLnNlYXJjaFBsYXlsaXN0KTtcclxuLy8gICBjb25zdCB7IHRyYWNrIH0gPSB1c2VBcHBTZWxlY3Rvcigoc3RhdGUpID0+IHN0YXRlLnRyYWNrcyk7XHJcbi8vICAgY29uc3QgaXNTZWFyY2ggPSB1c2VBcHBTZWxlY3Rvcigoc3RhdGUpID0+IHN0YXRlLnRyYWNrcy5pc1NlYXJjaCk7XHJcblxyXG4vLyAgIGNvbnN0IGFjdGl2ZUZpbHRlcnMgPSB1c2VBcHBTZWxlY3Rvcigoc3RhdGUpID0+IHN0YXRlLnRyYWNrcy5hY3RpdmVGaWx0ZXJzKTtcclxuXHJcblxyXG4vLyAgIGNvbnN0IHBsYXlsaXN0TnVtYmVyID0gdXNlQXBwU2VsZWN0b3IoKHN0YXRlKSA9PiBzdGF0ZS50cmFja3MucGxheWxpc3ROdW1iZXIpO1xyXG4gXHJcbi8vICAgdXNlRWZmZWN0KCgpID0+IHtcclxuLy8gICAgIGdldFRyYWNrcyhwbGF5bGlzdE51bWJlcikudGhlbigoZGF0YSkgPT4ge1xyXG5cclxuLy8gICAgICAgZGF0YS5pdGVtcyA/IGRpc3BhdGNoZXIoc2V0UGxheUxpc3QoZGF0YS5pdGVtcykpIDogZGlzcGF0Y2hlcihzZXRQbGF5TGlzdChkYXRhKSk7XHJcbi8vICAgICB9KTtcclxuLy8gICB9LCBbZGlzcGF0Y2hlciwgcGxheWxpc3ROdW1iZXJdKTtcclxuXHJcbi8vICAgY29uc3QgaGFuZGxlVHJhY2sgPSAodHJhY2tSOiB0cmFja1R5cGUpID0+IHtcclxuLy8gICAgIGRpc3BhdGNoZXIoc2V0Q3VycmVudFRyYWNrKHRyYWNrUikpO1xyXG4vLyAgIH07XHJcblxyXG4vLyAgIGNvbnN0IFt0cmFja0R1cmF0aW9ucywgc2V0VHJhY2tEdXJhdGlvbnNdID0gdXNlU3RhdGU8eyBba2V5OiBzdHJpbmddOiBudW1iZXIgfT4oe30pO1xyXG4vLyAgIGNvbnN0IGF1ZGlvUmVmcyA9IHVzZVJlZjx7IFtrZXk6IHN0cmluZ106IEhUTUxBdWRpb0VsZW1lbnQgfT4oe30pO1xyXG4vLyAgIHVzZUVmZmVjdCgoKSA9PiB7XHJcbi8vICAgICBjb25zdCBkdXJhdGlvbnM6IHsgW2tleTogc3RyaW5nXTogbnVtYmVyIH0gPSB7fTtcclxuLy8gICAgIHBsYXlMaXN0Py5mb3JFYWNoKCh0cmFjazogdHJhY2tUeXBlKSA9PiB7XHJcbi8vICAgICAgIGNvbnN0IGF1ZGlvID0gbmV3IEF1ZGlvKHRyYWNrLnRyYWNrX2ZpbGUpO1xyXG4vLyAgICAgICBhdWRpby5hZGRFdmVudExpc3RlbmVyKCdsb2FkZWRtZXRhZGF0YScsICgpID0+IHtcclxuLy8gICAgICAgICBkdXJhdGlvbnNbdHJhY2suaWRdID0gYXVkaW8uZHVyYXRpb247XHJcbi8vICAgICAgICAgc2V0VHJhY2tEdXJhdGlvbnMoeyAuLi5kdXJhdGlvbnMgfSk7XHJcbi8vICAgICAgIH0pO1xyXG4vLyAgICAgICBhdWRpb1JlZnMuY3VycmVudFt0cmFjay5pZF0gPSBhdWRpbztcclxuLy8gICAgIH0pO1xyXG4vLyAgICAgcmV0dXJuICgpID0+IHtcclxuLy8gICAgICAgT2JqZWN0LnZhbHVlcyhhdWRpb1JlZnMuY3VycmVudCkuZm9yRWFjaCgoYXVkaW8pID0+IHtcclxuLy8gICAgICAgICBhdWRpby5wYXVzZSgpO1xyXG4vLyAgICAgICAgIGF1ZGlvLnJlbW92ZUF0dHJpYnV0ZSgnc3JjJyk7XHJcbi8vICAgICAgICAgYXVkaW8ubG9hZCgpO1xyXG4vLyAgICAgICB9KTtcclxuLy8gICAgIH07XHJcbi8vICAgfSwgW3BsYXlMaXN0XSk7XHJcblxyXG4vLyAgIGNvbnN0IHRyYWNrc1RvUmVuZGVyID0gaXNTZWFyY2ggPyBzZWFyY2hQbGF5TGlzdCA6IHBsYXlMaXN0O1xyXG5cclxuXHJcbi8vICAgY29uc3QgZmlsdGVyVHJhY2tzID0gKHRyYWNrczogdHJhY2tUeXBlW10pID0+IHtcclxuLy8gICAgIHJldHVybiB0cmFja3MuZmlsdGVyKCh0cmFjaykgPT4ge1xyXG4vLyAgICAgICBjb25zdCBpc0F1dGhvcnNNYXRjaCA9IGFjdGl2ZUZpbHRlcnMuYXV0aG9ycy5sZW5ndGggPT09IDAgfHwgYWN0aXZlRmlsdGVycy5hdXRob3JzLmluY2x1ZGVzKHRyYWNrLmF1dGhvcik7XHJcbi8vICAgICAgIGNvbnN0IGlzR2VucmVzTWF0Y2ggPSBhY3RpdmVGaWx0ZXJzLmdlbnJlcy5sZW5ndGggPT09IDAgfHwgYWN0aXZlRmlsdGVycy5nZW5yZXMuaW5jbHVkZXModHJhY2suZ2VucmUpO1xyXG4vLyAgICAgICByZXR1cm4gaXNBdXRob3JzTWF0Y2ggJiYgaXNHZW5yZXNNYXRjaDtcclxuLy8gICAgIH0pO1xyXG4vLyAgIH07XHJcblxyXG4vLyAgIGNvbnN0IGZpbHRlcmVkQW5kU29ydGVkUGxheWxpc3QgPSB1c2VNZW1vKCgpID0+IHtcclxuLy8gICAgIGNvbnN0IGZpbHRlcmVkVHJhY2tzID0gZmlsdGVyVHJhY2tzKHRyYWNrc1RvUmVuZGVyKTtcclxuXHJcbi8vICAgICBpZiAoYWN0aXZlRmlsdGVycy5yZWxlYXNlX2RhdGVzKSB7XHJcbi8vICAgICAgIHJldHVybiBzb3J0VHJhY2tzQnlSZWxlYXNlRGF0ZShmaWx0ZXJlZFRyYWNrcywgYWN0aXZlRmlsdGVycy5yZWxlYXNlX2RhdGVzKTtcclxuLy8gICAgIH0gZWxzZSB7XHJcbi8vICAgICAgIHJldHVybiBmaWx0ZXJlZFRyYWNrcztcclxuLy8gICAgIH1cclxuLy8gICB9LCBbdHJhY2tzVG9SZW5kZXIsIGFjdGl2ZUZpbHRlcnNdKTtcclxuXHJcbi8vICAgcmV0dXJuIChcclxuLy8gICAgIDxkaXYgY2xhc3NOYW1lPXtjbGFzc05hbWVzKHN0eWxlcy5jb250ZW50UGxheWxpc3QsIHN0eWxlcy5wbGF5bGlzdCl9PlxyXG4vLyAgICAgICB7aXNTZWFyY2ggJiYgdHJhY2tzVG9SZW5kZXIubGVuZ3RoID09PSAwID8gKFxyXG4vLyAgICAgICAgIDxwIGNsYXNzTmFtZT17c3R5bGVzLnBsYXlsaXN0VGl0bGVDb2x9Pk5vIHRyYWNrcyBmb3VuZDwvcD5cclxuLy8gICAgICAgKSA6IChcclxuLy8gICAgICAgICBmaWx0ZXJlZEFuZFNvcnRlZFBsYXlsaXN0Lm1hcCgodHJhY2tSOiB0cmFja1R5cGUpID0+IChcclxuLy8gICAgICAgICAgIDxQbGF5TGlzdEl0ZW1cclxuLy8gICAgICAgICAgICAga2V5PXt0cmFja1IuaWR9XHJcbi8vICAgICAgICAgICAgIG5hbWU9e3RyYWNrUi5uYW1lfVxyXG4vLyAgICAgICAgICAgICBhdXRob3I9e3RyYWNrUi5hdXRob3J9XHJcbi8vICAgICAgICAgICAgIGFsYnVtPXt0cmFja1IuYWxidW19XHJcbi8vICAgICAgICAgICAgIGR1cmF0aW9uPXt0cmFja0R1cmF0aW9uc1t0cmFja1IuaWRdfVxyXG4vLyAgICAgICAgICAgICBzZXRUcmFjaz17KCkgPT4gaGFuZGxlVHJhY2sodHJhY2tSKX1cclxuLy8gICAgICAgICAgICAgaXNTZXRUcmFjaz17dHJhY2tSLmlkID09PSB0cmFjaz8uaWR9XHJcbi8vICAgICAgICAgICAvPlxyXG4vLyAgICAgICAgICkpXHJcbi8vICAgICAgICl9XHJcbi8vICAgICA8L2Rpdj5cclxuLy8gICApO1xyXG4vLyB9O1xyXG5cclxuLy8gZXhwb3J0IGRlZmF1bHQgQ29udGVudFBsYXlsaXN0OyJdLCJuYW1lcyI6WyJzdHlsZXMiLCJjbGFzc05hbWVzIiwiUmVhY3QiLCJ1c2VFZmZlY3QiLCJ1c2VNZW1vIiwidXNlUmVmIiwidXNlU3RhdGUiLCJzZXRDdXJyZW50VHJhY2siLCJzZXRQbGF5TGlzdCIsIlBsYXlMaXN0SXRlbSIsInNvcnRUcmFja3NCeVJlbGVhc2VEYXRlIiwic2V0QXV0aFVzZXJUb2tlbiIsInVzZUFwcERpc3BhdGNoIiwidXNlQXBwU2VsZWN0b3IiLCJyZWZyZXNoVG9rZW4iLCJDb250ZW50UGxheWxpc3QiLCJkaXNwYXRjaGVyIiwicGxheUxpc3QiLCJzdGF0ZSIsInRyYWNrcyIsInNlYXJjaFBsYXlMaXN0Iiwic2VhcmNoUGxheWxpc3QiLCJ0cmFjayIsInVzZXJUb2tlbiIsImxvY2FsU3RvcmFnZSIsImdldEl0ZW0iLCJpc1NlYXJjaCIsImFjdGl2ZUZpbHRlcnMiLCJ0b2tlblJlZnJlc2hJbnRlcnZhbCIsInNldFRva2VuUmVmcmVzaEludGVydmFsIiwiaGFuZGxlUmVmcmVzaFRva2VuIiwidG9rZW4iLCJyZWZyZXNoZWRUb2tlbiIsImFjY2VzcyIsImVycm9yIiwiY29uc29sZSIsImludGVydmFsIiwic2V0SW50ZXJ2YWwiLCJjbGVhckludGVydmFsIiwicGxheWxpc3RJRCIsInBsYXlsaXN0TnVtYmVyIiwiU3RyaW5nIiwiZ2V0TGlrZWRUcmFja3MiLCJ0aGVuIiwiZGF0YSIsImdldFRyYWNrcyIsIml0ZW1zIiwiaGFuZGxlVHJhY2siLCJ0cmFja1IiLCJ0cmFja0R1cmF0aW9ucyIsInNldFRyYWNrRHVyYXRpb25zIiwiYXVkaW9SZWZzIiwiZHVyYXRpb25zIiwiZm9yRWFjaCIsImF1ZGlvIiwiQXVkaW8iLCJ0cmFja19maWxlIiwiYWRkRXZlbnRMaXN0ZW5lciIsImlkIiwiZHVyYXRpb24iLCJjdXJyZW50IiwiT2JqZWN0IiwidmFsdWVzIiwicGF1c2UiLCJyZW1vdmVBdHRyaWJ1dGUiLCJsb2FkIiwidHJhY2tzVG9SZW5kZXIiLCJmaWx0ZXJUcmFja3MiLCJmaWx0ZXIiLCJpc0F1dGhvcnNNYXRjaCIsImF1dGhvcnMiLCJsZW5ndGgiLCJpbmNsdWRlcyIsImF1dGhvciIsImlzR2VucmVzTWF0Y2giLCJnZW5yZXMiLCJnZW5yZSIsImZpbHRlcmVkQW5kU29ydGVkUGxheWxpc3QiLCJmaWx0ZXJlZFRyYWNrcyIsInJlbGVhc2VfZGF0ZXMiLCJkaXYiLCJjbGFzc05hbWUiLCJjb250ZW50UGxheWxpc3QiLCJwbGF5bGlzdCIsInAiLCJwbGF5bGlzdFRpdGxlQ29sIiwibWFwIiwibmFtZSIsImFsYnVtIiwic2V0VHJhY2siLCJpc1NldFRyYWNrIiwic3RhcmVkX3VzZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/ContentPlaylist/ContentPlaylist.tsx\n"));

/***/ })

});